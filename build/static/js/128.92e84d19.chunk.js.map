{"version":3,"file":"static/js/128.92e84d19.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/gestures/utils/event-type.js","../node_modules/framer-motion/dist/es/events/event-info.js","../node_modules/framer-motion/dist/es/utils/time-conversion.js","../node_modules/framer-motion/dist/es/events/use-dom-event.js","../node_modules/framer-motion/dist/es/events/use-pointer-event.js","../node_modules/framer-motion/dist/es/events/utils.js","../node_modules/popmotion/dist/es/utils/is-point.js","../node_modules/popmotion/dist/es/utils/is-point-3d.js","../node_modules/popmotion/dist/es/utils/inc.js","../node_modules/popmotion/dist/es/utils/distance.js","../node_modules/popmotion/dist/es/utils/pipe.js","../node_modules/framer-motion/dist/es/gestures/PanSession.js","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.js","../node_modules/framer-motion/dist/es/utils/each-axis.js","../node_modules/popmotion/dist/es/utils/mix.js","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.js","../node_modules/framer-motion/dist/es/render/dom/projection/measure.js","../node_modules/popmotion/dist/es/utils/clamp.js","../node_modules/popmotion/dist/es/utils/progress.js","../node_modules/framer-motion/dist/es/utils/geometry/delta-calc.js","../node_modules/popmotion/dist/es/animations/utils/find-spring.js","../node_modules/popmotion/dist/es/animations/generators/spring.js","../node_modules/style-value-types/dist/es/color/utils.js","../node_modules/style-value-types/dist/es/color/rgba.js","../node_modules/style-value-types/dist/es/color/hex.js","../node_modules/style-value-types/dist/es/color/hsla.js","../node_modules/popmotion/dist/es/utils/mix-color.js","../node_modules/style-value-types/dist/es/color/index.js","../node_modules/style-value-types/dist/es/complex/index.js","../node_modules/popmotion/dist/es/utils/mix-complex.js","../node_modules/popmotion/dist/es/utils/interpolate.js","../node_modules/popmotion/dist/es/easing/utils.js","../node_modules/popmotion/dist/es/easing/index.js","../node_modules/popmotion/dist/es/animations/generators/keyframes.js","../node_modules/popmotion/dist/es/animations/utils/detect-animation-from-options.js","../node_modules/popmotion/dist/es/animations/generators/decay.js","../node_modules/popmotion/dist/es/animations/utils/elapsed.js","../node_modules/popmotion/dist/es/animations/index.js","../node_modules/popmotion/dist/es/utils/velocity-per-second.js","../node_modules/popmotion/dist/es/easing/cubic-bezier.js","../node_modules/framer-motion/dist/es/animation/utils/easing.js","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.js","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.js","../node_modules/style-value-types/dist/es/complex/filter.js","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.js","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.js","../node_modules/framer-motion/dist/es/animation/utils/transitions.js","../node_modules/framer-motion/dist/es/render/utils/types.js","../node_modules/popmotion/dist/es/animations/inertia.js","../node_modules/framer-motion/dist/es/motion/features/layout/utils.js","../node_modules/framer-motion/dist/es/render/utils/is-draggable.js","../node_modules/framer-motion/dist/es/utils/geometry/delta-apply.js","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.js","../node_modules/framer-motion/dist/es/render/dom/projection/convert-to-relative.js","../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.js","../node_modules/framer-motion/dist/es/motion/features/drag.js","../node_modules/framer-motion/dist/es/gestures/use-pan-gesture.js","../node_modules/framer-motion/dist/es/gestures/drag/use-drag.js","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.js","../node_modules/framer-motion/dist/es/render/dom/projection/default-scale-correctors.js","../node_modules/framer-motion/dist/es/motion/features/layout/Animate.js","../node_modules/framer-motion/dist/es/motion/features/layout/Measure.js","../node_modules/framer-motion/dist/es/motion/features/layout/index.js","../node_modules/framer-motion/dist/es/utils/shallow-compare.js","../node_modules/framer-motion/dist/es/utils/is-numerical-string.js","../node_modules/framer-motion/dist/es/utils/array.js","../node_modules/framer-motion/dist/es/utils/subscription-manager.js","../node_modules/framer-motion/dist/es/value/index.js","../node_modules/framer-motion/dist/es/render/dom/value-types/test.js","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.js","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.js","../node_modules/framer-motion/dist/es/render/dom/value-types/find.js","../node_modules/framer-motion/dist/es/render/utils/setters.js","../node_modules/framer-motion/dist/es/render/utils/animation.js","../node_modules/framer-motion/dist/es/render/utils/animation-state.js","../node_modules/framer-motion/dist/es/motion/features/animations.js","../node_modules/framer-motion/dist/es/gestures/use-hover-gesture.js","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.js","../node_modules/framer-motion/dist/es/motion/features/gestures.js","../node_modules/framer-motion/dist/es/gestures/use-tap-gesture.js","../node_modules/framer-motion/dist/es/gestures/use-focus-gesture.js","../node_modules/framer-motion/dist/es/render/utils/state.js","../node_modules/framer-motion/dist/es/render/html/utils/build-projection-transform.js","../node_modules/framer-motion/dist/es/render/utils/lifecycles.js","../node_modules/framer-motion/dist/es/render/utils/projection.js","../node_modules/framer-motion/dist/es/render/utils/flat-tree.js","../node_modules/framer-motion/dist/es/render/index.js","../node_modules/framer-motion/dist/es/render/utils/motion-values.js","../node_modules/framer-motion/dist/es/render/dom/projection/relative-set.js","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.js","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.js","../node_modules/framer-motion/dist/es/render/html/visual-element.js","../node_modules/framer-motion/dist/es/render/svg/visual-element.js","../node_modules/framer-motion/dist/es/render/dom/features-animation.js","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.js","../node_modules/framer-motion/dist/es/render/dom/features-max.js"],"sourcesContent":["function isMouseEvent(event) {\n    // PointerEvent inherits from MouseEvent so we can't use a straight instanceof check.\n    if (typeof PointerEvent !== \"undefined\" && event instanceof PointerEvent) {\n        return !!(event.pointerType === \"mouse\");\n    }\n    return event instanceof MouseEvent;\n}\nfunction isTouchEvent(event) {\n    var hasTouches = !!event.touches;\n    return hasTouches;\n}\n\nexport { isMouseEvent, isTouchEvent };\n","import { isTouchEvent } from '../gestures/utils/event-type.js';\n\n/**\n * Filters out events not attached to the primary pointer (currently left mouse button)\n * @param eventHandler\n */\nfunction filterPrimaryPointer(eventHandler) {\n    return function (event) {\n        var isMouseEvent = event instanceof MouseEvent;\n        var isPrimaryPointer = !isMouseEvent ||\n            (isMouseEvent && event.button === 0);\n        if (isPrimaryPointer) {\n            eventHandler(event);\n        }\n    };\n}\nvar defaultPagePoint = { pageX: 0, pageY: 0 };\nfunction pointFromTouch(e, pointType) {\n    if (pointType === void 0) { pointType = \"page\"; }\n    var primaryTouch = e.touches[0] || e.changedTouches[0];\n    var point = primaryTouch || defaultPagePoint;\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction pointFromMouse(point, pointType) {\n    if (pointType === void 0) { pointType = \"page\"; }\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction extractEventInfo(event, pointType) {\n    if (pointType === void 0) { pointType = \"page\"; }\n    return {\n        point: isTouchEvent(event)\n            ? pointFromTouch(event, pointType)\n            : pointFromMouse(event, pointType),\n    };\n}\nfunction getViewportPointFromEvent(event) {\n    return extractEventInfo(event, \"client\");\n}\nvar wrapHandler = function (handler, shouldFilterPrimaryPointer) {\n    if (shouldFilterPrimaryPointer === void 0) { shouldFilterPrimaryPointer = false; }\n    var listener = function (event) {\n        return handler(event, extractEventInfo(event));\n    };\n    return shouldFilterPrimaryPointer\n        ? filterPrimaryPointer(listener)\n        : listener;\n};\n\nexport { extractEventInfo, getViewportPointFromEvent, wrapHandler };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nvar secondsToMilliseconds = function (seconds) { return seconds * 1000; };\n\nexport { secondsToMilliseconds };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options) {\n    target.addEventListener(eventName, handler, options);\n    return function () { return target.removeEventListener(eventName, handler, options); };\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(function () {\n        var element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","import { useDomEvent, addDomEvent } from './use-dom-event.js';\nimport { wrapHandler } from './event-info.js';\nimport { supportsPointerEvents, supportsTouchEvents, supportsMouseEvents } from './utils.js';\n\nvar mouseEventNames = {\n    pointerdown: \"mousedown\",\n    pointermove: \"mousemove\",\n    pointerup: \"mouseup\",\n    pointercancel: \"mousecancel\",\n    pointerover: \"mouseover\",\n    pointerout: \"mouseout\",\n    pointerenter: \"mouseenter\",\n    pointerleave: \"mouseleave\",\n};\nvar touchEventNames = {\n    pointerdown: \"touchstart\",\n    pointermove: \"touchmove\",\n    pointerup: \"touchend\",\n    pointercancel: \"touchcancel\",\n};\nfunction getPointerEventName(name) {\n    if (supportsPointerEvents()) {\n        return name;\n    }\n    else if (supportsTouchEvents()) {\n        return touchEventNames[name];\n    }\n    else if (supportsMouseEvents()) {\n        return mouseEventNames[name];\n    }\n    return name;\n}\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, getPointerEventName(eventName), handler && wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","import { isBrowser } from '../utils/is-browser.js';\n\n// We check for event support via functions in case they've been mocked by a testing suite.\nvar supportsPointerEvents = function () {\n    return isBrowser && window.onpointerdown === null;\n};\nvar supportsTouchEvents = function () {\n    return isBrowser && window.ontouchstart === null;\n};\nvar supportsMouseEvents = function () {\n    return isBrowser && window.onmousedown === null;\n};\n\nexport { supportsMouseEvents, supportsPointerEvents, supportsTouchEvents };\n","var isPoint = function (point) {\n    return point.hasOwnProperty('x') && point.hasOwnProperty('y');\n};\n\nexport { isPoint };\n","import { isPoint } from './is-point.js';\n\nvar isPoint3D = function (point) {\n    return isPoint(point) && point.hasOwnProperty('z');\n};\n\nexport { isPoint3D };\n","var zeroPoint = {\n    x: 0,\n    y: 0,\n    z: 0\n};\nvar isNum = function (v) { return typeof v === 'number'; };\n\nexport { isNum, zeroPoint };\n","import { isPoint } from './is-point.js';\nimport { isPoint3D } from './is-point-3d.js';\nimport { isNum } from './inc.js';\n\nvar distance1D = function (a, b) { return Math.abs(a - b); };\nfunction distance(a, b) {\n    if (isNum(a) && isNum(b)) {\n        return distance1D(a, b);\n    }\n    else if (isPoint(a) && isPoint(b)) {\n        var xDelta = distance1D(a.x, b.x);\n        var yDelta = distance1D(a.y, b.y);\n        var zDelta = isPoint3D(a) && isPoint3D(b) ? distance1D(a.z, b.z) : 0;\n        return Math.sqrt(Math.pow(xDelta, 2) + Math.pow(yDelta, 2) + Math.pow(zDelta, 2));\n    }\n}\n\nexport { distance };\n","var combineFunctions = function (a, b) { return function (v) { return b(a(v)); }; };\nvar pipe = function () {\n    var transformers = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        transformers[_i] = arguments[_i];\n    }\n    return transformers.reduce(combineFunctions);\n};\n\nexport { pipe };\n","import { __assign } from 'tslib';\nimport { isMouseEvent, isTouchEvent } from './utils/event-type.js';\nimport { extractEventInfo } from '../events/event-info.js';\nimport sync, { getFrameData, cancelSync } from 'framesync';\nimport { secondsToMilliseconds } from '../utils/time-conversion.js';\nimport { addPointerEvent } from '../events/use-pointer-event.js';\nimport { distance, pipe } from 'popmotion';\n\n/**\n * @internal\n */\nvar PanSession = /** @class */ (function () {\n    function PanSession(event, handlers, _a) {\n        var _this = this;\n        var _b = _a === void 0 ? {} : _a, transformPagePoint = _b.transformPagePoint;\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = function () {\n            if (!(_this.lastMoveEvent && _this.lastMoveEventInfo))\n                return;\n            var info = getPanInfo(_this.lastMoveEventInfo, _this.history);\n            var isPanStarted = _this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            var isDistancePastThreshold = distance(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            var point = info.point;\n            var timestamp = getFrameData().timestamp;\n            _this.history.push(__assign(__assign({}, point), { timestamp: timestamp }));\n            var _a = _this.handlers, onStart = _a.onStart, onMove = _a.onMove;\n            if (!isPanStarted) {\n                onStart && onStart(_this.lastMoveEvent, info);\n                _this.startEvent = _this.lastMoveEvent;\n            }\n            onMove && onMove(_this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = function (event, info) {\n            _this.lastMoveEvent = event;\n            _this.lastMoveEventInfo = transformPoint(info, _this.transformPagePoint);\n            // Because Safari doesn't trigger mouseup events when it's above a `<select>`\n            if (isMouseEvent(event) && event.buttons === 0) {\n                _this.handlePointerUp(event, info);\n                return;\n            }\n            // Throttle mouse move event to once per frame\n            sync.update(_this.updatePoint, true);\n        };\n        this.handlePointerUp = function (event, info) {\n            _this.end();\n            var _a = _this.handlers, onEnd = _a.onEnd, onSessionEnd = _a.onSessionEnd;\n            var panInfo = getPanInfo(transformPoint(info, _this.transformPagePoint), _this.history);\n            if (_this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (isTouchEvent(event) && event.touches.length > 1)\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        var info = extractEventInfo(event);\n        var initialInfo = transformPoint(info, this.transformPagePoint);\n        var point = initialInfo.point;\n        var timestamp = getFrameData().timestamp;\n        this.history = [__assign(__assign({}, point), { timestamp: timestamp })];\n        var onSessionStart = handlers.onSessionStart;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    PanSession.prototype.updateHandlers = function (handlers) {\n        this.handlers = handlers;\n    };\n    PanSession.prototype.end = function () {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    };\n    return PanSession;\n}());\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo(_a, history) {\n    var point = _a.point;\n    return {\n        point: point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    var i = history.length - 1;\n    var timestampedPoint = null;\n    var lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    var time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    var currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function createLock(name) {\n    var lock = null;\n    return function () {\n        var openLock = function () {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nvar globalHorizontalLock = createLock(\"dragHorizontal\");\nvar globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    var lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        var openHorizontal_1 = globalHorizontalLock();\n        var openVertical_1 = globalVerticalLock();\n        if (openHorizontal_1 && openVertical_1) {\n            lock = function () {\n                openHorizontal_1();\n                openVertical_1();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal_1)\n                openHorizontal_1();\n            if (openVertical_1)\n                openVertical_1();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    var openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","// Call a handler once for each axis\nfunction eachAxis(handler) {\n    return [handler(\"x\"), handler(\"y\")];\n}\n\nexport { eachAxis };\n","var mix = function (from, to, progress) {\n    return -progress * from + progress * to + from;\n};\n\nexport { mix };\n","import { __read } from 'tslib';\nimport { mix } from 'popmotion';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, _a, elastic) {\n    var min = _a.min, max = _a.max;\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculates a min projection point based on a pointer, pointer progress\n * within the drag target, and constraints.\n *\n * For instance if an element was 100px width, we were dragging from 0.25\n * along this axis, the pointer is at 200px, and there were no constraints,\n * we would calculate a min projection point of 175px.\n */\nfunction calcConstrainedMinPoint(point, length, progress, constraints, elastic) {\n    // Calculate a min point for this axis and apply it to the current pointer\n    var min = point - length * progress;\n    return constraints ? applyConstraints(min, constraints, elastic) : min;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, _a) {\n    var top = _a.top, left = _a.left, bottom = _a.bottom, right = _a.right;\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    var _a;\n    var min = constraintsAxis.min - layoutAxis.min;\n    var max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        _a = __read([max, min], 2), min = _a[0], max = _a[1];\n    }\n    return {\n        min: layoutAxis.min + min,\n        max: layoutAxis.min + max,\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate the an axis position based on two axes and a progress value.\n */\nfunction calcPositionFromProgress(axis, constraints, progress) {\n    var axisLength = axis.max - axis.min;\n    var min = mix(constraints.min, constraints.max - axisLength, progress);\n    return { min: min, max: min + axisLength };\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    var relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nvar defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    var _a;\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : (_a = dragElastic[label]) !== null && _a !== void 0 ? _a : 0;\n}\n\nexport { applyConstraints, calcConstrainedMinPoint, calcPositionFromProgress, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { convertBoundingBoxToAxisBox, transformBoundingBox } from '../../../utils/geometry/index.js';\n\n/**\n * Measure and return the element bounding box.\n *\n * We convert the box into an AxisBox2D to make it easier to work with each axis\n * individually and programmatically.\n *\n * This function optionally accepts a transformPagePoint function which allows us to compensate\n * for, for instance, measuring the element within a scaled plane like a Framer devivce preview component.\n */\nfunction getBoundingBox(element, transformPagePoint) {\n    var box = element.getBoundingClientRect();\n    return convertBoundingBoxToAxisBox(transformBoundingBox(box, transformPagePoint));\n}\n\nexport { getBoundingBox };\n","var clamp = function (min, max, v) {\n    return Math.min(Math.max(v, min), max);\n};\n\nexport { clamp };\n","var progress = function (from, to, value) {\n    var toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { mix, distance, clamp, progress } from 'popmotion';\n\nvar clampProgress = function (v) { return clamp(0, 1, v); };\n/**\n * Returns true if the provided value is within maxDistance of the provided target\n */\nfunction isNear(value, target, maxDistance) {\n    if (target === void 0) { target = 0; }\n    if (maxDistance === void 0) { maxDistance = 0.01; }\n    return distance(value, target) < maxDistance;\n}\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    var origin = 0.5;\n    var sourceLength = calcLength(source);\n    var targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clampProgress(origin);\n}\n/**\n * Update the AxisDelta with a transform that projects source into target.\n *\n * The transform `origin` is optional. If not provided, it'll be automatically\n * calculated based on the relative positions of the two bounding boxes.\n */\nfunction updateAxisDelta(delta, source, target, origin) {\n    if (origin === void 0) { origin = 0.5; }\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate))\n        delta.translate = 0;\n}\n/**\n * Update the BoxDelta with a transform that projects the source into the target.\n *\n * The transform `origin` is optional. If not provided, it'll be automatically\n * calculated based on the relative positions of the two bounding boxes.\n */\nfunction updateBoxDelta(delta, source, target, origin) {\n    updateAxisDelta(delta.x, source.x, target.x, defaultOrigin(origin.originX));\n    updateAxisDelta(delta.y, source.y, target.y, defaultOrigin(origin.originY));\n}\n/**\n * Currently this only accepts numerical origins, measured as 0-1, but could\n * accept pixel values by comparing to the target axis.\n */\nfunction defaultOrigin(origin) {\n    return typeof origin === \"number\" ? origin : 0.5;\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(projection, parentProjection) {\n    calcRelativeAxis(projection.target.x, projection.relativeTarget.x, parentProjection.target.x);\n    calcRelativeAxis(projection.target.y, projection.relativeTarget.y, parentProjection.target.y);\n}\n\nexport { calcOrigin, calcRelativeAxis, calcRelativeBox, isNear, updateAxisDelta, updateBoxDelta };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.js';\n\nvar safeMin = 0.001;\nvar minDuration = 0.01;\nvar maxDuration = 10.0;\nvar minDamping = 0.05;\nvar maxDamping = 1;\nfunction findSpring(_a) {\n    var _b = _a.duration, duration = _b === void 0 ? 800 : _b, _c = _a.bounce, bounce = _c === void 0 ? 0.25 : _c, _d = _a.velocity, velocity = _d === void 0 ? 0 : _d, _e = _a.mass, mass = _e === void 0 ? 1 : _e;\n    var envelope;\n    var derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    var dampingRatio = 1 - bounce;\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        envelope = function (undampedFreq) {\n            var exponentialDecay = undampedFreq * dampingRatio;\n            var delta = exponentialDecay * duration;\n            var a = exponentialDecay - velocity;\n            var b = calcAngularFreq(undampedFreq, dampingRatio);\n            var c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = function (undampedFreq) {\n            var exponentialDecay = undampedFreq * dampingRatio;\n            var delta = exponentialDecay * duration;\n            var d = delta * velocity + velocity;\n            var e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            var f = Math.exp(-delta);\n            var g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            var factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        envelope = function (undampedFreq) {\n            var a = Math.exp(-undampedFreq * duration);\n            var b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = function (undampedFreq) {\n            var a = Math.exp(-undampedFreq * duration);\n            var b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    var initialGuess = 5 / duration;\n    var undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration: duration,\n        };\n    }\n    else {\n        var stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness: stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration: duration,\n        };\n    }\n}\nvar rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    var result = initialGuess;\n    for (var i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { __rest, __assign } from 'tslib';\nimport { findSpring, calcAngularFreq } from '../utils/find-spring.js';\n\nvar durationKeys = [\"duration\", \"bounce\"];\nvar physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some(function (key) { return options[key] !== undefined; });\n}\nfunction getSpringOptions(options) {\n    var springOptions = __assign({ velocity: 0.0, stiffness: 100, damping: 10, mass: 1.0, isResolvedFromDuration: false }, options);\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        var derived = findSpring(options);\n        springOptions = __assign(__assign(__assign({}, springOptions), derived), { velocity: 0.0, mass: 1.0 });\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring(_a) {\n    var _b = _a.from, from = _b === void 0 ? 0.0 : _b, _c = _a.to, to = _c === void 0 ? 1.0 : _c, _d = _a.restSpeed, restSpeed = _d === void 0 ? 2 : _d, restDelta = _a.restDelta, options = __rest(_a, [\"from\", \"to\", \"restSpeed\", \"restDelta\"]);\n    var state = { done: false, value: from };\n    var _e = getSpringOptions(options), stiffness = _e.stiffness, damping = _e.damping, mass = _e.mass, velocity = _e.velocity, duration = _e.duration, isResolvedFromDuration = _e.isResolvedFromDuration;\n    var resolveSpring = zero;\n    var resolveVelocity = zero;\n    function createSpring() {\n        var initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n        var initialDelta = to - from;\n        var dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n        var undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        restDelta !== null && restDelta !== void 0 ? restDelta : (restDelta = Math.abs(to - from) <= 1 ? 0.01 : 0.4);\n        if (dampingRatio < 1) {\n            var angularFreq_1 = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            resolveSpring = function (t) {\n                var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (to -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq_1) *\n                            Math.sin(angularFreq_1 * t) +\n                            initialDelta * Math.cos(angularFreq_1 * t)));\n            };\n            resolveVelocity = function (t) {\n                var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (dampingRatio *\n                    undampedAngularFreq *\n                    envelope *\n                    ((Math.sin(angularFreq_1 * t) *\n                        (initialVelocity +\n                            dampingRatio *\n                                undampedAngularFreq *\n                                initialDelta)) /\n                        angularFreq_1 +\n                        initialDelta * Math.cos(angularFreq_1 * t)) -\n                    envelope *\n                        (Math.cos(angularFreq_1 * t) *\n                            (initialVelocity +\n                                dampingRatio *\n                                    undampedAngularFreq *\n                                    initialDelta) -\n                            angularFreq_1 *\n                                initialDelta *\n                                Math.sin(angularFreq_1 * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            resolveSpring = function (t) {\n                return to -\n                    Math.exp(-undampedAngularFreq * t) *\n                        (initialDelta +\n                            (initialVelocity + undampedAngularFreq * initialDelta) *\n                                t);\n            };\n        }\n        else {\n            var dampedAngularFreq_1 = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = function (t) {\n                var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                var freqForT = Math.min(dampedAngularFreq_1 * t, 300);\n                return (to -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq_1 *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq_1);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: function (t) {\n            var current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                var currentVelocity = resolveVelocity(t) * 1000;\n                var isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                var isBelowDisplacementThreshold = Math.abs(to - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? to : current;\n            return state;\n        },\n        flipTarget: function () {\n            var _a;\n            velocity = -velocity;\n            _a = [to, from], from = _a[0], to = _a[1];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = function (a, b) {\n    return typeof a === \"string\" || typeof b === \"string\";\n};\nvar zero = function (_t) { return 0; };\n\nexport { spring };\n","import { isString, singleColorRegex, floatRegex } from '../utils.js';\n\nvar isColorString = function (type, testProp) { return function (v) {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n}; };\nvar splitColor = function (aName, bName, cName) { return function (v) {\n    var _a;\n    if (!isString(v))\n        return v;\n    var _b = v.match(floatRegex), a = _b[0], b = _b[1], c = _b[2], alpha = _b[3];\n    return _a = {},\n        _a[aName] = parseFloat(a),\n        _a[bName] = parseFloat(b),\n        _a[cName] = parseFloat(c),\n        _a.alpha = alpha !== undefined ? parseFloat(alpha) : 1,\n        _a;\n}; };\n\nexport { isColorString, splitColor };\n","import { __assign } from 'tslib';\nimport { number, alpha } from '../numbers/index.js';\nimport { sanitize, clamp } from '../utils.js';\nimport { isColorString, splitColor } from './utils.js';\n\nvar clampRgbUnit = clamp(0, 255);\nvar rgbUnit = __assign(__assign({}, number), { transform: function (v) { return Math.round(clampRgbUnit(v)); } });\nvar rgba = {\n    test: isColorString('rgb', 'red'),\n    parse: splitColor('red', 'green', 'blue'),\n    transform: function (_a) {\n        var red = _a.red, green = _a.green, blue = _a.blue, _b = _a.alpha, alpha$1 = _b === void 0 ? 1 : _b;\n        return 'rgba(' +\n            rgbUnit.transform(red) +\n            ', ' +\n            rgbUnit.transform(green) +\n            ', ' +\n            rgbUnit.transform(blue) +\n            ', ' +\n            sanitize(alpha.transform(alpha$1)) +\n            ')';\n    },\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.js';\nimport { isColorString } from './utils.js';\n\nfunction parseHex(v) {\n    var r = '';\n    var g = '';\n    var b = '';\n    var a = '';\n    if (v.length > 5) {\n        r = v.substr(1, 2);\n        g = v.substr(3, 2);\n        b = v.substr(5, 2);\n        a = v.substr(7, 2);\n    }\n    else {\n        r = v.substr(1, 1);\n        g = v.substr(2, 1);\n        b = v.substr(3, 1);\n        a = v.substr(4, 1);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nvar hex = {\n    test: isColorString('#'),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.js';\nimport { percent } from '../numbers/units.js';\nimport { sanitize } from '../utils.js';\nimport { isColorString, splitColor } from './utils.js';\n\nvar hsla = {\n    test: isColorString('hsl', 'hue'),\n    parse: splitColor('hue', 'saturation', 'lightness'),\n    transform: function (_a) {\n        var hue = _a.hue, saturation = _a.saturation, lightness = _a.lightness, _b = _a.alpha, alpha$1 = _b === void 0 ? 1 : _b;\n        return ('hsla(' +\n            Math.round(hue) +\n            ', ' +\n            percent.transform(sanitize(saturation)) +\n            ', ' +\n            percent.transform(sanitize(lightness)) +\n            ', ' +\n            sanitize(alpha.transform(alpha$1)) +\n            ')');\n    },\n};\n\nexport { hsla };\n","import { __assign } from 'tslib';\nimport { mix } from './mix.js';\nimport { hex, rgba, hsla } from 'style-value-types';\nimport { invariant } from 'hey-listen';\n\nvar mixLinearColor = function (from, to, v) {\n    var fromExpo = from * from;\n    var toExpo = to * to;\n    return Math.sqrt(Math.max(0, v * (toExpo - fromExpo) + fromExpo));\n};\nvar colorTypes = [hex, rgba, hsla];\nvar getColorType = function (v) {\n    return colorTypes.find(function (type) { return type.test(v); });\n};\nvar notAnimatable = function (color) {\n    return \"'\" + color + \"' is not an animatable color. Use the equivalent color code instead.\";\n};\nvar mixColor = function (from, to) {\n    var fromColorType = getColorType(from);\n    var toColorType = getColorType(to);\n    invariant(!!fromColorType, notAnimatable(from));\n    invariant(!!toColorType, notAnimatable(to));\n    invariant(fromColorType.transform === toColorType.transform, \"Both colors must be hex/RGBA, OR both must be HSLA.\");\n    var fromColor = fromColorType.parse(from);\n    var toColor = toColorType.parse(to);\n    var blended = __assign({}, fromColor);\n    var mixFunc = fromColorType === hsla ? mix : mixLinearColor;\n    return function (v) {\n        for (var key in blended) {\n            if (key !== \"alpha\") {\n                blended[key] = mixFunc(fromColor[key], toColor[key], v);\n            }\n        }\n        blended.alpha = mix(fromColor.alpha, toColor.alpha, v);\n        return fromColorType.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { isString } from '../utils.js';\nimport { hex } from './hex.js';\nimport { hsla } from './hsla.js';\nimport { rgba } from './rgba.js';\n\nvar color = {\n    test: function (v) { return rgba.test(v) || hex.test(v) || hsla.test(v); },\n    parse: function (v) {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: function (v) {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty('red')\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.js';\nimport { number } from '../numbers/index.js';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.js';\n\nvar colorToken = '${c}';\nvar numberToken = '${n}';\nfunction test(v) {\n    var _a, _b, _c, _d;\n    return (isNaN(v) &&\n        isString(v) &&\n        ((_b = (_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0) + ((_d = (_c = v.match(colorRegex)) === null || _c === void 0 ? void 0 : _c.length) !== null && _d !== void 0 ? _d : 0) > 0);\n}\nfunction analyse(v) {\n    var values = [];\n    var numColors = 0;\n    var colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        v = v.replace(colorRegex, colorToken);\n        values.push.apply(values, colors.map(color.parse));\n    }\n    var numbers = v.match(floatRegex);\n    if (numbers) {\n        v = v.replace(floatRegex, numberToken);\n        values.push.apply(values, numbers.map(number.parse));\n    }\n    return { values: values, numColors: numColors, tokenised: v };\n}\nfunction parse(v) {\n    return analyse(v).values;\n}\nfunction createTransformer(v) {\n    var _a = analyse(v), values = _a.values, numColors = _a.numColors, tokenised = _a.tokenised;\n    var numValues = values.length;\n    return function (v) {\n        var output = tokenised;\n        for (var i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors ? color.transform(v[i]) : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nvar convertNumbersToZero = function (v) {\n    return typeof v === 'number' ? 0 : v;\n};\nfunction getAnimatableNone(v) {\n    var parsed = parse(v);\n    var transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nvar complex = { test: test, parse: parse, createTransformer: createTransformer, getAnimatableNone: getAnimatableNone };\n\nexport { complex };\n","import { __spreadArray, __assign } from 'tslib';\nimport { complex, color } from 'style-value-types';\nimport { mix } from './mix.js';\nimport { mixColor } from './mix-color.js';\nimport { isNum } from './inc.js';\nimport { pipe } from './pipe.js';\nimport { invariant } from 'hey-listen';\n\nfunction getMixer(origin, target) {\n    if (isNum(origin)) {\n        return function (v) { return mix(origin, target, v); };\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nvar mixArray = function (from, to) {\n    var output = __spreadArray([], from);\n    var numValues = output.length;\n    var blendValue = from.map(function (fromThis, i) { return getMixer(fromThis, to[i]); });\n    return function (v) {\n        for (var i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nvar mixObject = function (origin, target) {\n    var output = __assign(__assign({}, origin), target);\n    var blendValue = {};\n    for (var key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return function (v) {\n        for (var key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nfunction analyse(value) {\n    var parsed = complex.parse(value);\n    var numValues = parsed.length;\n    var numNumbers = 0;\n    var numRGB = 0;\n    var numHSL = 0;\n    for (var i = 0; i < numValues; i++) {\n        if (numNumbers || typeof parsed[i] === \"number\") {\n            numNumbers++;\n        }\n        else {\n            if (parsed[i].hue !== undefined) {\n                numHSL++;\n            }\n            else {\n                numRGB++;\n            }\n        }\n    }\n    return { parsed: parsed, numNumbers: numNumbers, numRGB: numRGB, numHSL: numHSL };\n}\nvar mixComplex = function (origin, target) {\n    var template = complex.createTransformer(target);\n    var originStats = analyse(origin);\n    var targetStats = analyse(target);\n    invariant(originStats.numHSL === targetStats.numHSL &&\n        originStats.numRGB === targetStats.numRGB &&\n        originStats.numNumbers >= targetStats.numNumbers, \"Complex values '\" + origin + \"' and '\" + target + \"' too different to mix. Ensure all colors are of the same type.\");\n    return pipe(mixArray(originStats.parsed, targetStats.parsed), template);\n};\n\nexport { mixArray, mixComplex, mixObject };\n","import { progress } from './progress.js';\nimport { mix } from './mix.js';\nimport { mixColor } from './mix-color.js';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.js';\nimport { color } from 'style-value-types';\nimport { clamp } from './clamp.js';\nimport { pipe } from './pipe.js';\nimport { invariant } from 'hey-listen';\n\nvar mixNumber = function (from, to) { return function (p) { return mix(from, to, p); }; };\nfunction detectMixerFactory(v) {\n    if (typeof v === 'number') {\n        return mixNumber;\n    }\n    else if (typeof v === 'string') {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === 'object') {\n        return mixObject;\n    }\n}\nfunction createMixers(output, ease, customMixer) {\n    var mixers = [];\n    var mixerFactory = customMixer || detectMixerFactory(output[0]);\n    var numMixers = output.length - 1;\n    for (var i = 0; i < numMixers; i++) {\n        var mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            var easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\nfunction fastInterpolate(_a, _b) {\n    var from = _a[0], to = _a[1];\n    var mixer = _b[0];\n    return function (v) { return mixer(progress(from, to, v)); };\n}\nfunction slowInterpolate(input, mixers) {\n    var inputLength = input.length;\n    var lastInputIndex = inputLength - 1;\n    return function (v) {\n        var mixerIndex = 0;\n        var foundMixerIndex = false;\n        if (v <= input[0]) {\n            foundMixerIndex = true;\n        }\n        else if (v >= input[lastInputIndex]) {\n            mixerIndex = lastInputIndex - 1;\n            foundMixerIndex = true;\n        }\n        if (!foundMixerIndex) {\n            var i = 1;\n            for (; i < inputLength; i++) {\n                if (input[i] > v || i === lastInputIndex) {\n                    break;\n                }\n            }\n            mixerIndex = i - 1;\n        }\n        var progressInRange = progress(input[mixerIndex], input[mixerIndex + 1], v);\n        return mixers[mixerIndex](progressInRange);\n    };\n}\nfunction interpolate(input, output, _a) {\n    var _b = _a === void 0 ? {} : _a, _c = _b.clamp, isClamp = _c === void 0 ? true : _c, ease = _b.ease, mixer = _b.mixer;\n    var inputLength = input.length;\n    invariant(inputLength === output.length, 'Both input and output ranges must be the same length');\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, 'Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.');\n    if (input[0] > input[inputLength - 1]) {\n        input = [].concat(input);\n        output = [].concat(output);\n        input.reverse();\n        output.reverse();\n    }\n    var mixers = createMixers(output, ease, mixer);\n    var interpolator = inputLength === 2\n        ? fastInterpolate(input, mixers)\n        : slowInterpolate(input, mixers);\n    return isClamp\n        ? function (v) { return interpolator(clamp(input[0], input[inputLength - 1], v)); }\n        : interpolator;\n}\n\nexport { interpolate };\n","var reverseEasing = function (easing) { return function (p) { return 1 - easing(1 - p); }; };\nvar mirrorEasing = function (easing) { return function (p) {\n    return p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n}; };\nvar createExpoIn = function (power) { return function (p) { return Math.pow(p, power); }; };\nvar createBackIn = function (power) { return function (p) {\n    return p * p * ((power + 1) * p - power);\n}; };\nvar createAnticipate = function (power) {\n    var backEasing = createBackIn(power);\n    return function (p) {\n        return (p *= 2) < 1\n            ? 0.5 * backEasing(p)\n            : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n    };\n};\n\nexport { createAnticipate, createBackIn, createExpoIn, mirrorEasing, reverseEasing };\n","import { createExpoIn, reverseEasing, mirrorEasing, createBackIn, createAnticipate } from './utils.js';\n\nvar DEFAULT_OVERSHOOT_STRENGTH = 1.525;\nvar BOUNCE_FIRST_THRESHOLD = 4.0 / 11.0;\nvar BOUNCE_SECOND_THRESHOLD = 8.0 / 11.0;\nvar BOUNCE_THIRD_THRESHOLD = 9.0 / 10.0;\nvar linear = function (p) { return p; };\nvar easeIn = createExpoIn(2);\nvar easeOut = reverseEasing(easeIn);\nvar easeInOut = mirrorEasing(easeIn);\nvar circIn = function (p) { return 1 - Math.sin(Math.acos(p)); };\nvar circOut = reverseEasing(circIn);\nvar circInOut = mirrorEasing(circOut);\nvar backIn = createBackIn(DEFAULT_OVERSHOOT_STRENGTH);\nvar backOut = reverseEasing(backIn);\nvar backInOut = mirrorEasing(backIn);\nvar anticipate = createAnticipate(DEFAULT_OVERSHOOT_STRENGTH);\nvar ca = 4356.0 / 361.0;\nvar cb = 35442.0 / 1805.0;\nvar cc = 16061.0 / 1805.0;\nvar bounceOut = function (p) {\n    if (p === 1 || p === 0)\n        return p;\n    var p2 = p * p;\n    return p < BOUNCE_FIRST_THRESHOLD\n        ? 7.5625 * p2\n        : p < BOUNCE_SECOND_THRESHOLD\n            ? 9.075 * p2 - 9.9 * p + 3.4\n            : p < BOUNCE_THIRD_THRESHOLD\n                ? ca * p2 - cb * p + cc\n                : 10.8 * p * p - 20.52 * p + 10.72;\n};\nvar bounceIn = reverseEasing(bounceOut);\nvar bounceInOut = function (p) {\n    return p < 0.5\n        ? 0.5 * (1.0 - bounceOut(1.0 - p * 2.0))\n        : 0.5 * bounceOut(p * 2.0 - 1.0) + 0.5;\n};\n\nexport { anticipate, backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, easeIn, easeInOut, easeOut, linear };\n","import { interpolate } from '../../utils/interpolate.js';\nimport { easeInOut } from '../../easing/index.js';\n\nfunction defaultEasing(values, easing) {\n    return values.map(function () { return easing || easeInOut; }).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    var numValues = values.length;\n    return values.map(function (_value, i) {\n        return i !== 0 ? i / (numValues - 1) : 0;\n    });\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map(function (o) { return o * duration; });\n}\nfunction keyframes(_a) {\n    var _b = _a.from, from = _b === void 0 ? 0 : _b, _c = _a.to, to = _c === void 0 ? 1 : _c, ease = _a.ease, offset = _a.offset, _d = _a.duration, duration = _d === void 0 ? 300 : _d;\n    var state = { done: false, value: from };\n    var values = Array.isArray(to) ? to : [from, to];\n    var times = convertOffsetToTimes(offset && offset.length === values.length\n        ? offset\n        : defaultOffset(values), duration);\n    function createInterpolator() {\n        return interpolate(times, values, {\n            ease: Array.isArray(ease) ? ease : defaultEasing(values, ease),\n        });\n    }\n    var interpolator = createInterpolator();\n    return {\n        next: function (t) {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: function () {\n            values.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { spring } from '../generators/spring.js';\nimport { keyframes } from '../generators/keyframes.js';\nimport { decay } from '../generators/decay.js';\n\nvar types = { keyframes: keyframes, spring: spring, decay: decay };\nfunction detectAnimationFromOptions(config) {\n    if (Array.isArray(config.to)) {\n        return keyframes;\n    }\n    else if (types[config.type]) {\n        return types[config.type];\n    }\n    var keys = new Set(Object.keys(config));\n    if (keys.has(\"ease\") ||\n        (keys.has(\"duration\") && !keys.has(\"dampingRatio\"))) {\n        return keyframes;\n    }\n    else if (keys.has(\"dampingRatio\") ||\n        keys.has(\"stiffness\") ||\n        keys.has(\"mass\") ||\n        keys.has(\"damping\") ||\n        keys.has(\"restSpeed\") ||\n        keys.has(\"restDelta\")) {\n        return spring;\n    }\n    return keyframes;\n}\n\nexport { detectAnimationFromOptions };\n","function decay(_a) {\n    var _b = _a.velocity, velocity = _b === void 0 ? 0 : _b, _c = _a.from, from = _c === void 0 ? 0 : _c, _d = _a.power, power = _d === void 0 ? 0.8 : _d, _e = _a.timeConstant, timeConstant = _e === void 0 ? 350 : _e, _f = _a.restDelta, restDelta = _f === void 0 ? 0.5 : _f, modifyTarget = _a.modifyTarget;\n    var state = { done: false, value: from };\n    var amplitude = power * velocity;\n    var ideal = from + amplitude;\n    var target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    if (target !== ideal)\n        amplitude = target - from;\n    return {\n        next: function (t) {\n            var delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: function () { },\n    };\n}\n\nexport { decay };\n","function loopElapsed(elapsed, duration, delay) {\n    if (delay === void 0) { delay = 0; }\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration, delay, isForwardPlayback) {\n    if (delay === void 0) { delay = 0; }\n    if (isForwardPlayback === void 0) { isForwardPlayback = true; }\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\n\nexport { hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","import { __rest, __assign } from 'tslib';\nimport { detectAnimationFromOptions } from './utils/detect-animation-from-options.js';\nimport sync, { cancelSync } from 'framesync';\nimport { interpolate } from '../utils/interpolate.js';\nimport { hasRepeatDelayElapsed, reverseElapsed, loopElapsed } from './utils/elapsed.js';\n\nvar framesync = function (update) {\n    var passTimestamp = function (_a) {\n        var delta = _a.delta;\n        return update(delta);\n    };\n    return {\n        start: function () { return sync.update(passTimestamp, true); },\n        stop: function () { return cancelSync.update(passTimestamp); },\n    };\n};\nfunction animate(_a) {\n    var _b, _c;\n    var from = _a.from, _d = _a.autoplay, autoplay = _d === void 0 ? true : _d, _e = _a.driver, driver = _e === void 0 ? framesync : _e, _f = _a.elapsed, elapsed = _f === void 0 ? 0 : _f, _g = _a.repeat, repeatMax = _g === void 0 ? 0 : _g, _h = _a.repeatType, repeatType = _h === void 0 ? \"loop\" : _h, _j = _a.repeatDelay, repeatDelay = _j === void 0 ? 0 : _j, onPlay = _a.onPlay, onStop = _a.onStop, onComplete = _a.onComplete, onRepeat = _a.onRepeat, onUpdate = _a.onUpdate, options = __rest(_a, [\"from\", \"autoplay\", \"driver\", \"elapsed\", \"repeat\", \"repeatType\", \"repeatDelay\", \"onPlay\", \"onStop\", \"onComplete\", \"onRepeat\", \"onUpdate\"]);\n    var to = options.to;\n    var driverControls;\n    var repeatCount = 0;\n    var computedDuration = options.duration;\n    var latest;\n    var isComplete = false;\n    var isForwardPlayback = true;\n    var interpolateFromNumber;\n    var animator = detectAnimationFromOptions(options);\n    if ((_c = (_b = animator).needsInterpolation) === null || _c === void 0 ? void 0 : _c.call(_b, from, to)) {\n        interpolateFromNumber = interpolate([0, 100], [from, to], {\n            clamp: false,\n        });\n        from = 0;\n        to = 100;\n    }\n    var animation = animator(__assign(__assign({}, options), { from: from, to: to }));\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            var state = animation.next(Math.max(0, elapsed));\n            latest = state.value;\n            if (interpolateFromNumber)\n                latest = interpolateFromNumber(latest);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(latest);\n        if (isComplete) {\n            if (repeatCount === 0)\n                computedDuration !== null && computedDuration !== void 0 ? computedDuration : (computedDuration = elapsed);\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay === null || onPlay === void 0 ? void 0 : onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: function () {\n            onStop === null || onStop === void 0 ? void 0 : onStop();\n            driverControls.stop();\n        },\n    };\n}\n\nexport { animate };\n","function velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { linear } from './index.js';\n\nvar a = function (a1, a2) { return 1.0 - 3.0 * a2 + 3.0 * a1; };\nvar b = function (a1, a2) { return 3.0 * a2 - 6.0 * a1; };\nvar c = function (a1) { return 3.0 * a1; };\nvar calcBezier = function (t, a1, a2) {\n    return ((a(a1, a2) * t + b(a1, a2)) * t + c(a1)) * t;\n};\nvar getSlope = function (t, a1, a2) {\n    return 3.0 * a(a1, a2) * t * t + 2.0 * b(a1, a2) * t + c(a1);\n};\nvar subdivisionPrecision = 0.0000001;\nvar subdivisionMaxIterations = 10;\nfunction binarySubdivide(aX, aA, aB, mX1, mX2) {\n    var currentX;\n    var currentT;\n    var i = 0;\n    do {\n        currentT = aA + (aB - aA) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - aX;\n        if (currentX > 0.0) {\n            aB = currentT;\n        }\n        else {\n            aA = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nvar newtonIterations = 8;\nvar newtonMinSlope = 0.001;\nfunction newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n    for (var i = 0; i < newtonIterations; ++i) {\n        var currentSlope = getSlope(aGuessT, mX1, mX2);\n        if (currentSlope === 0.0) {\n            return aGuessT;\n        }\n        var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n        aGuessT -= currentX / currentSlope;\n    }\n    return aGuessT;\n}\nvar kSplineTableSize = 11;\nvar kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    if (mX1 === mY1 && mX2 === mY2)\n        return linear;\n    var sampleValues = new Float32Array(kSplineTableSize);\n    for (var i = 0; i < kSplineTableSize; ++i) {\n        sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n    }\n    function getTForX(aX) {\n        var intervalStart = 0.0;\n        var currentSample = 1;\n        var lastSample = kSplineTableSize - 1;\n        for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n            intervalStart += kSampleStepSize;\n        }\n        --currentSample;\n        var dist = (aX - sampleValues[currentSample]) /\n            (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n        var guessForT = intervalStart + dist * kSampleStepSize;\n        var initialSlope = getSlope(guessForT, mX1, mX2);\n        if (initialSlope >= newtonMinSlope) {\n            return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n        }\n        else if (initialSlope === 0.0) {\n            return guessForT;\n        }\n        else {\n            return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n        }\n    }\n    return function (t) {\n        return t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n    };\n}\n\nexport { cubicBezier };\n","import { __read } from 'tslib';\nimport { invariant } from 'hey-listen';\nimport { cubicBezier, linear, easeIn, easeInOut, easeOut, circIn, circInOut, circOut, backIn, backInOut, backOut, anticipate, bounceIn, bounceInOut, bounceOut } from 'popmotion';\n\nvar easingLookup = {\n    linear: linear,\n    easeIn: easeIn,\n    easeInOut: easeInOut,\n    easeOut: easeOut,\n    circIn: circIn,\n    circInOut: circInOut,\n    circOut: circOut,\n    backIn: backIn,\n    backInOut: backInOut,\n    backOut: backOut,\n    anticipate: anticipate,\n    bounceIn: bounceIn,\n    bounceInOut: bounceInOut,\n    bounceOut: bounceOut,\n};\nvar easingDefinitionToFunction = function (definition) {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, \"Cubic bezier arrays must contain four numerical values.\");\n        var _a = __read(definition, 4), x1 = _a[0], y1 = _a[1], x2 = _a[2], y2 = _a[3];\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, \"Invalid easing type '\" + definition + \"'\");\n        return easingLookup[definition];\n    }\n    return definition;\n};\nvar isEasingArray = function (ease) {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { complex } from 'style-value-types';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nvar isAnimatable = function (key, value) {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { __assign } from 'tslib';\nimport { isKeyframesTarget } from './is-keyframes-target.js';\n\nvar underDampedSpring = function () { return ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restDelta: 0.5,\n    restSpeed: 10,\n}); };\nvar criticallyDampedSpring = function (to) { return ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: to === 0 ? 2 * Math.sqrt(550) : 30,\n    restDelta: 0.01,\n    restSpeed: 10,\n}); };\nvar linearTween = function () { return ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n}); };\nvar keyframes = function (values) { return ({\n    type: \"keyframes\",\n    duration: 0.8,\n    values: values,\n}); };\nvar defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nvar getDefaultTransition = function (valueKey, to) {\n    var transitionFactory;\n    if (isKeyframesTarget(to)) {\n        transitionFactory = keyframes;\n    }\n    else {\n        transitionFactory =\n            defaultTransitions[valueKey] || defaultTransitions.default;\n    }\n    return __assign({ to: to }, transitionFactory(to));\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { __assign } from 'tslib';\nimport { complex } from './index.js';\nimport { floatRegex } from '../utils.js';\n\nvar maxDefaults = new Set(['brightness', 'contrast', 'saturate', 'opacity']);\nfunction applyDefaultFilter(v) {\n    var _a = v.slice(0, -1).split('('), name = _a[0], value = _a[1];\n    if (name === 'drop-shadow')\n        return v;\n    var number = (value.match(floatRegex) || [])[0];\n    if (!number)\n        return v;\n    var unit = value.replace(number, '');\n    var defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + '(' + defaultValue + unit + ')';\n}\nvar functionRegex = /([a-z-]*)\\(.*?\\)/g;\nvar filter = __assign(__assign({}, complex), { getAnimatableNone: function (v) {\n        var functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(' ') : v;\n    } });\n\nexport { filter };\n","import { __assign } from 'tslib';\nimport { color, filter } from 'style-value-types';\nimport { numberValueTypes } from './number.js';\n\n/**\n * A map of default value types for common values\n */\nvar defaultValueTypes = __assign(__assign({}, numberValueTypes), { \n    // Color props\n    color: color, backgroundColor: color, outlineColor: color, fill: color, stroke: color, \n    // Border props\n    borderColor: color, borderTopColor: color, borderRightColor: color, borderBottomColor: color, borderLeftColor: color, filter: filter, WebkitFilter: filter });\n/**\n * Gets the default ValueType for the provided value key\n */\nvar getDefaultValueType = function (key) { return defaultValueTypes[key]; };\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { filter, complex } from 'style-value-types';\nimport { getDefaultValueType } from './defaults.js';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    var defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n","import { __assign, __rest, __spreadArray, __read } from 'tslib';\nimport { inertia, animate } from 'popmotion';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.js';\nimport { isEasingArray, easingDefinitionToFunction } from './easing.js';\nimport { isAnimatable } from './is-animatable.js';\nimport { getDefaultTransition } from './default-transitions.js';\nimport { warning } from 'hey-listen';\nimport { getAnimatableNone } from '../../render/dom/value-types/animatable-none.js';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined(_a) {\n    _a.when; _a.delay; _a.delayChildren; _a.staggerChildren; _a.staggerDirection; _a.repeat; _a.repeatType; _a.repeatDelay; _a.from; var transition = __rest(_a, [\"when\", \"delay\", \"delayChildren\", \"staggerChildren\", \"staggerDirection\", \"repeat\", \"repeatType\", \"repeatDelay\", \"from\"]);\n    return !!Object.keys(transition).length;\n}\nvar legacyRepeatWarning = false;\n/**\n * Convert Framer Motion's Transition type into Popmotion-compatible options.\n */\nfunction convertTransitionToAnimationOptions(_a) {\n    var ease = _a.ease, times = _a.times, yoyo = _a.yoyo, flip = _a.flip, loop = _a.loop, transition = __rest(_a, [\"ease\", \"times\", \"yoyo\", \"flip\", \"loop\"]);\n    var options = __assign({}, transition);\n    if (times)\n        options[\"offset\"] = times;\n    /**\n     * Convert any existing durations from seconds to milliseconds\n     */\n    if (transition.duration)\n        options[\"duration\"] = secondsToMilliseconds(transition.duration);\n    if (transition.repeatDelay)\n        options.repeatDelay = secondsToMilliseconds(transition.repeatDelay);\n    /**\n     * Map easing names to Popmotion's easing functions\n     */\n    if (ease) {\n        options[\"ease\"] = isEasingArray(ease)\n            ? ease.map(easingDefinitionToFunction)\n            : easingDefinitionToFunction(ease);\n    }\n    /**\n     * Support legacy transition API\n     */\n    if (transition.type === \"tween\")\n        options.type = \"keyframes\";\n    /**\n     * TODO: These options are officially removed from the API.\n     */\n    if (yoyo || loop || flip) {\n        warning(!legacyRepeatWarning, \"yoyo, loop and flip have been removed from the API. Replace with repeat and repeatType options.\");\n        legacyRepeatWarning = true;\n        if (yoyo) {\n            options.repeatType = \"reverse\";\n        }\n        else if (loop) {\n            options.repeatType = \"loop\";\n        }\n        else if (flip) {\n            options.repeatType = \"mirror\";\n        }\n        options.repeat = loop || yoyo || flip || transition.repeat;\n    }\n    /**\n     * TODO: Popmotion 9 has the ability to automatically detect whether to use\n     * a keyframes or spring animation, but does so by detecting velocity and other spring options.\n     * It'd be good to introduce a similar thing here.\n     */\n    if (transition.type !== \"spring\")\n        options.type = \"keyframes\";\n    return options;\n}\n/**\n * Get the delay for a value by checking Transition with decreasing specificity.\n */\nfunction getDelayFromTransition(transition, key) {\n    var _a;\n    var valueTransition = getValueTransition(transition, key) || {};\n    return (_a = valueTransition.delay) !== null && _a !== void 0 ? _a : 0;\n}\nfunction hydrateKeyframes(options) {\n    if (Array.isArray(options.to) && options.to[0] === null) {\n        options.to = __spreadArray([], __read(options.to));\n        options.to[0] = options.from;\n    }\n    return options;\n}\nfunction getPopmotionAnimationOptions(transition, options, key) {\n    var _a;\n    if (Array.isArray(options.to)) {\n        (_a = transition.duration) !== null && _a !== void 0 ? _a : (transition.duration = 0.8);\n    }\n    hydrateKeyframes(options);\n    /**\n     * Get a default transition if none is determined to be defined.\n     */\n    if (!isTransitionDefined(transition)) {\n        transition = __assign(__assign({}, transition), getDefaultTransition(key, options.to));\n    }\n    return __assign(__assign({}, options), convertTransitionToAnimationOptions(transition));\n}\n/**\n *\n */\nfunction getAnimation(key, value, target, transition, onComplete) {\n    var _a;\n    var valueTransition = getValueTransition(transition, key);\n    var origin = (_a = valueTransition.from) !== null && _a !== void 0 ? _a : value.get();\n    var isTargetAnimatable = isAnimatable(key, target);\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(key, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    var isOriginAnimatable = isAnimatable(key, origin);\n    warning(isOriginAnimatable === isTargetAnimatable, \"You are trying to animate \" + key + \" from \\\"\" + origin + \"\\\" to \\\"\" + target + \"\\\". \" + origin + \" is not an animatable value - to enable this animation set \" + origin + \" to a value animatable to \" + target + \" via the `style` property.\");\n    function start() {\n        var options = {\n            from: origin,\n            to: target,\n            velocity: value.getVelocity(),\n            onComplete: onComplete,\n            onUpdate: function (v) { return value.set(v); },\n        };\n        return valueTransition.type === \"inertia\" ||\n            valueTransition.type === \"decay\"\n            ? inertia(__assign(__assign({}, options), valueTransition))\n            : animate(__assign(__assign({}, getPopmotionAnimationOptions(valueTransition, options, key)), { onUpdate: function (v) {\n                    var _a;\n                    options.onUpdate(v);\n                    (_a = valueTransition.onUpdate) === null || _a === void 0 ? void 0 : _a.call(valueTransition, v);\n                }, onComplete: function () {\n                    var _a;\n                    options.onComplete();\n                    (_a = valueTransition.onComplete) === null || _a === void 0 ? void 0 : _a.call(valueTransition);\n                } }));\n    }\n    function set() {\n        var _a;\n        value.set(target);\n        onComplete();\n        (_a = valueTransition === null || valueTransition === void 0 ? void 0 : valueTransition.onComplete) === null || _a === void 0 ? void 0 : _a.call(valueTransition);\n        return { stop: function () { } };\n    }\n    return !isOriginAnimatable ||\n        !isTargetAnimatable ||\n        valueTransition.type === false\n        ? set\n        : start;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n/**\n * Start animation on a MotionValue. This function is an interface between\n * Framer Motion and Popmotion\n *\n * @internal\n */\nfunction startAnimation(key, value, target, transition) {\n    if (transition === void 0) { transition = {}; }\n    return value.start(function (onComplete) {\n        var delayTimer;\n        var controls;\n        var animation = getAnimation(key, value, target, transition, onComplete);\n        var delay = getDelayFromTransition(transition, key);\n        var start = function () { return (controls = animation()); };\n        if (delay) {\n            delayTimer = setTimeout(start, secondsToMilliseconds(delay));\n        }\n        else {\n            start();\n        }\n        return function () {\n            clearTimeout(delayTimer);\n            controls === null || controls === void 0 ? void 0 : controls.stop();\n        };\n    });\n}\n\nexport { convertTransitionToAnimationOptions, getDelayFromTransition, getPopmotionAnimationOptions, getValueTransition, getZeroUnit, hydrateKeyframes, isTransitionDefined, isZero, startAnimation };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { __assign } from 'tslib';\nimport { animate } from './index.js';\nimport { velocityPerSecond } from '../utils/velocity-per-second.js';\nimport { getFrameData } from 'framesync';\n\nfunction inertia(_a) {\n    var _b = _a.from, from = _b === void 0 ? 0 : _b, _c = _a.velocity, velocity = _c === void 0 ? 0 : _c, min = _a.min, max = _a.max, _d = _a.power, power = _d === void 0 ? 0.8 : _d, _e = _a.timeConstant, timeConstant = _e === void 0 ? 750 : _e, _f = _a.bounceStiffness, bounceStiffness = _f === void 0 ? 500 : _f, _g = _a.bounceDamping, bounceDamping = _g === void 0 ? 10 : _g, _h = _a.restDelta, restDelta = _h === void 0 ? 1 : _h, modifyTarget = _a.modifyTarget, driver = _a.driver, onUpdate = _a.onUpdate, onComplete = _a.onComplete;\n    var currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function boundaryNearest(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate(__assign(__assign({}, options), { driver: driver, onUpdate: function (v) {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            }, onComplete: onComplete }));\n    }\n    function startSpring(options) {\n        startAnimation(__assign({ type: \"spring\", stiffness: bounceStiffness, damping: bounceDamping, restDelta: restDelta }, options));\n    }\n    if (isOutOfBounds(from)) {\n        startSpring({ from: from, velocity: velocity, to: boundaryNearest(from) });\n    }\n    else {\n        var target = power * velocity + from;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        var boundary_1 = boundaryNearest(target);\n        var heading_1 = boundary_1 === min ? -1 : 1;\n        var prev_1;\n        var current_1;\n        var checkBoundary = function (v) {\n            prev_1 = current_1;\n            current_1 = v;\n            velocity = velocityPerSecond(v - prev_1, getFrameData().delta);\n            if ((heading_1 === 1 && v > boundary_1) ||\n                (heading_1 === -1 && v < boundary_1)) {\n                startSpring({ from: v, to: boundary_1, velocity: velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            from: from,\n            velocity: velocity,\n            timeConstant: timeConstant,\n            power: power,\n            restDelta: restDelta,\n            modifyTarget: modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: function () { return currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(); },\n    };\n}\n\nexport { inertia };\n","import { mix } from 'popmotion';\n\nfunction tweenAxis(target, prev, next, p) {\n    target.min = mix(prev.min, next.min, p);\n    target.max = mix(prev.max, next.max, p);\n}\nfunction calcRelativeOffsetAxis(parent, child) {\n    return {\n        min: child.min - parent.min,\n        max: child.max - parent.min,\n    };\n}\nfunction calcRelativeOffset(parent, child) {\n    return {\n        x: calcRelativeOffsetAxis(parent.x, child.x),\n        y: calcRelativeOffsetAxis(parent.y, child.y),\n    };\n}\nfunction checkIfParentHasChanged(prev, next) {\n    var prevId = prev.getLayoutId();\n    var nextId = next.getLayoutId();\n    return prevId !== nextId || (nextId === undefined && prev !== next);\n}\n\nexport { calcRelativeOffset, calcRelativeOffsetAxis, checkIfParentHasChanged, tweenAxis };\n","function isDraggable(visualElement) {\n    var _a = visualElement.getProps(), drag = _a.drag, _dragX = _a._dragX;\n    return drag && !_dragX;\n}\n\nexport { isDraggable };\n","import { __read } from 'tslib';\nimport { mix } from 'popmotion';\nimport { isDraggable } from '../../render/utils/is-draggable.js';\n\n/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction resetAxis(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction resetBox(box, originBox) {\n    resetAxis(box.x, originBox.x);\n    resetAxis(box.y, originBox.y);\n}\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    var distanceFromOrigin = point - originPoint;\n    var scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate, scale, originPoint, boxScale) {\n    if (translate === void 0) { translate = 0; }\n    if (scale === void 0) { scale = 1; }\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, _a) {\n    var x = _a.x, y = _a.y;\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction applyAxisTransforms(final, axis, transforms, _a) {\n    var _b = __read(_a, 3), key = _b[0], scaleKey = _b[1], originKey = _b[2];\n    // Copy the current axis to the final axis before mutation\n    final.min = axis.min;\n    final.max = axis.max;\n    var axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    var originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(final, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nvar xKeys = [\"x\", \"scaleX\", \"originX\"];\nvar yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction applyBoxTransforms(finalBox, box, transforms) {\n    applyAxisTransforms(finalBox.x, box.x, transforms, xKeys);\n    applyAxisTransforms(finalBox.y, box.y, transforms, yKeys);\n}\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate, scale, origin, boxScale) {\n    if (translate === void 0) { translate = 0; }\n    if (scale === void 0) { scale = 1; }\n    if (origin === void 0) { origin = 0.5; }\n    var originPoint = mix(axis.min, axis.max, origin) - translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, _a) {\n    var _b = __read(_a, 3), key = _b[0], scaleKey = _b[1], originKey = _b[2];\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale);\n}\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms) {\n    removeAxisTransforms(box.x, transforms, xKeys);\n    removeAxisTransforms(box.y, transforms, yKeys);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath) {\n    var treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    var node;\n    var delta;\n    for (var i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.getLayoutState().delta;\n        // Incoporate each ancestor's scale into a culmulative treeScale for this component\n        treeScale.x *= delta.x.scale;\n        treeScale.y *= delta.y.scale;\n        // Apply each ancestor's calculated delta into this component's recorded layout box\n        applyBoxDelta(box, delta);\n        // If this is a draggable ancestor, also incorporate the node's transform to the layout box\n        if (isDraggable(node)) {\n            applyBoxTransforms(box, box, node.getLatestValues());\n        }\n    }\n}\n\nexport { applyAxisDelta, applyAxisTransforms, applyBoxDelta, applyBoxTransforms, applyPointDelta, applyTreeDeltas, removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta, resetAxis, resetBox, scalePoint };\n","import { __rest, __assign, __spreadArray, __read } from 'tslib';\nimport { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.js';\nimport { getGlobalLock } from './utils/lock.js';\nimport { isRefObject } from '../../utils/is-ref-object.js';\nimport { addPointerEvent } from '../../events/use-pointer-event.js';\nimport { addDomEvent } from '../../events/use-dom-event.js';\nimport { getViewportPointFromEvent } from '../../events/event-info.js';\nimport { axisBox, convertAxisBoxToBoundingBox, convertBoundingBoxToAxisBox } from '../../utils/geometry/index.js';\nimport { eachAxis } from '../../utils/each-axis.js';\nimport { calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, applyConstraints, calcConstrainedMinPoint, calcPositionFromProgress, defaultElastic } from './utils/constraints.js';\nimport { getBoundingBox } from '../../render/dom/projection/measure.js';\nimport { calcOrigin } from '../../utils/geometry/delta-calc.js';\nimport { startAnimation } from '../../animation/utils/transitions.js';\nimport { AnimationType } from '../../render/utils/types.js';\nimport { collectProjectingAncestors, updateLayoutMeasurement, collectProjectingChildren } from '../../render/dom/projection/utils.js';\nimport { progress } from 'popmotion';\nimport { convertToRelativeProjection } from '../../render/dom/projection/convert-to-relative.js';\nimport { calcRelativeOffset } from '../../motion/features/layout/utils.js';\nimport { flushLayout, batchLayout } from '../../render/dom/utils/batch-layout.js';\nimport { flushSync } from 'framesync';\n\nvar elementDragControls = new WeakMap();\n/**\n *\n */\nvar lastPointerEvent;\nvar VisualElementDragControls = /** @class */ (function () {\n    function VisualElementDragControls(_a) {\n        var visualElement = _a.visualElement;\n        /**\n         * Track whether we're currently dragging.\n         *\n         * @internal\n         */\n        this.isDragging = false;\n        /**\n         * The current direction of drag, or `null` if both.\n         *\n         * @internal\n         */\n        this.currentDirection = null;\n        /**\n         * The permitted boundaries of travel, in pixels.\n         *\n         * @internal\n         */\n        this.constraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         *\n         * @internal\n         */\n        this.elastic = axisBox();\n        /**\n         * A reference to the host component's latest props.\n         *\n         * @internal\n         */\n        this.props = {};\n        /**\n         * @internal\n         */\n        this.hasMutatedConstraints = false;\n        /**\n         * Track the initial position of the cursor relative to the dragging element\n         * when dragging starts as a value of 0-1 on each axis. We then use this to calculate\n         * an ideal bounding box for the VisualElement renderer to project into every frame.\n         *\n         * @internal\n         */\n        this.cursorProgress = {\n            x: 0.5,\n            y: 0.5,\n        };\n        // When updating _dragX, or _dragY instead of the VisualElement,\n        // persist their values between drag gestures.\n        this.originPoint = {};\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        /**\n         * @internal\n         */\n        this.panSession = null;\n        this.visualElement = visualElement;\n        this.visualElement.enableLayoutProjection();\n        elementDragControls.set(visualElement, this);\n    }\n    /**\n     * Instantiate a PanSession for the drag gesture\n     *\n     * @public\n     */\n    VisualElementDragControls.prototype.start = function (originEvent, _a) {\n        var _this = this;\n        var _b = _a === void 0 ? {} : _a, _c = _b.snapToCursor, snapToCursor = _c === void 0 ? false : _c, cursorProgress = _b.cursorProgress;\n        var onSessionStart = function (event) {\n            var _a;\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            _this.stopMotion();\n            /**\n             * Save the initial point. We'll use this to calculate the pointer's position rather\n             * than the one we receive when the gesture actually starts. By then, the pointer will\n             * have already moved, and the perception will be of the pointer \"slipping\" across the element\n             */\n            var initialPoint = getViewportPointFromEvent(event).point;\n            (_a = _this.cancelLayout) === null || _a === void 0 ? void 0 : _a.call(_this);\n            _this.cancelLayout = batchLayout(function (read, write) {\n                var ancestors = collectProjectingAncestors(_this.visualElement);\n                var children = collectProjectingChildren(_this.visualElement);\n                var tree = __spreadArray(__spreadArray([], __read(ancestors)), __read(children));\n                var hasManuallySetCursorOrigin = false;\n                /**\n                 * Apply a simple lock to the projection target. This ensures no animations\n                 * can run on the projection box while this lock is active.\n                 */\n                _this.isLayoutDrag() && _this.visualElement.lockProjectionTarget();\n                write(function () {\n                    tree.forEach(function (element) { return element.resetTransform(); });\n                });\n                read(function () {\n                    updateLayoutMeasurement(_this.visualElement);\n                    children.forEach(updateLayoutMeasurement);\n                });\n                write(function () {\n                    tree.forEach(function (element) { return element.restoreTransform(); });\n                    if (snapToCursor) {\n                        hasManuallySetCursorOrigin = _this.snapToCursor(initialPoint);\n                    }\n                });\n                read(function () {\n                    var isRelativeDrag = Boolean(_this.getAxisMotionValue(\"x\") && !_this.isExternalDrag());\n                    if (!isRelativeDrag) {\n                        _this.visualElement.rebaseProjectionTarget(true, _this.visualElement.measureViewportBox(false));\n                    }\n                    _this.visualElement.scheduleUpdateLayoutProjection();\n                    /**\n                     * When dragging starts, we want to find where the cursor is relative to the bounding box\n                     * of the element. Every frame, we calculate a new bounding box using this relative position\n                     * and let the visualElement renderer figure out how to reproject the element into this bounding\n                     * box.\n                     *\n                     * By doing it this way, rather than applying an x/y transform directly to the element,\n                     * we can ensure the component always visually sticks to the cursor as we'd expect, even\n                     * if the DOM element itself changes layout as a result of React updates the user might\n                     * make based on the drag position.\n                     */\n                    var projection = _this.visualElement.projection;\n                    eachAxis(function (axis) {\n                        if (!hasManuallySetCursorOrigin) {\n                            var _a = projection.target[axis], min = _a.min, max = _a.max;\n                            _this.cursorProgress[axis] = cursorProgress\n                                ? cursorProgress[axis]\n                                : progress(min, max, initialPoint[axis]);\n                        }\n                        /**\n                         * If we have external drag MotionValues, record their origin point. On pointermove\n                         * we'll apply the pan gesture offset directly to this value.\n                         */\n                        var axisValue = _this.getAxisMotionValue(axis);\n                        if (axisValue) {\n                            _this.originPoint[axis] = axisValue.get();\n                        }\n                    });\n                });\n                write(function () {\n                    flushSync.update();\n                    flushSync.preRender();\n                    flushSync.render();\n                    flushSync.postRender();\n                });\n                read(function () { return _this.resolveDragConstraints(); });\n            });\n        };\n        var onStart = function (event, info) {\n            var _a, _b, _c;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            var _d = _this.props, drag = _d.drag, dragPropagation = _d.dragPropagation;\n            if (drag && !dragPropagation) {\n                if (_this.openGlobalLock)\n                    _this.openGlobalLock();\n                _this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!_this.openGlobalLock)\n                    return;\n            }\n            flushLayout();\n            // Set current drag status\n            _this.isDragging = true;\n            _this.currentDirection = null;\n            // Fire onDragStart event\n            (_b = (_a = _this.props).onDragStart) === null || _b === void 0 ? void 0 : _b.call(_a, event, info);\n            (_c = _this.visualElement.animationState) === null || _c === void 0 ? void 0 : _c.setActive(AnimationType.Drag, true);\n        };\n        var onMove = function (event, info) {\n            var _a, _b, _c, _d;\n            var _e = _this.props, dragPropagation = _e.dragPropagation, dragDirectionLock = _e.dragDirectionLock;\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !_this.openGlobalLock)\n                return;\n            var offset = info.offset;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && _this.currentDirection === null) {\n                _this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (_this.currentDirection !== null) {\n                    (_b = (_a = _this.props).onDirectionLock) === null || _b === void 0 ? void 0 : _b.call(_a, _this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            _this.updateAxis(\"x\", info.point, offset);\n            _this.updateAxis(\"y\", info.point, offset);\n            // Fire onDrag event\n            (_d = (_c = _this.props).onDrag) === null || _d === void 0 ? void 0 : _d.call(_c, event, info);\n            // Update the last pointer event\n            lastPointerEvent = event;\n        };\n        var onSessionEnd = function (event, info) {\n            return _this.stop(event, info);\n        };\n        var transformPagePoint = this.props.transformPagePoint;\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart: onSessionStart,\n            onStart: onStart,\n            onMove: onMove,\n            onSessionEnd: onSessionEnd,\n        }, { transformPagePoint: transformPagePoint });\n    };\n    VisualElementDragControls.prototype.resolveDragConstraints = function () {\n        var _this = this;\n        var _a = this.props, dragConstraints = _a.dragConstraints, dragElastic = _a.dragElastic;\n        var layout = this.visualElement.getLayoutState().layoutCorrected;\n        if (dragConstraints) {\n            this.constraints = isRefObject(dragConstraints)\n                ? this.resolveRefConstraints(layout, dragConstraints)\n                : calcRelativeConstraints(layout, dragConstraints);\n        }\n        else {\n            this.constraints = false;\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (this.constraints && !this.hasMutatedConstraints) {\n            eachAxis(function (axis) {\n                if (_this.getAxisMotionValue(axis)) {\n                    _this.constraints[axis] = rebaseAxisConstraints(layout[axis], _this.constraints[axis]);\n                }\n            });\n        }\n    };\n    VisualElementDragControls.prototype.resolveRefConstraints = function (layoutBox, constraints) {\n        var _a = this.props, onMeasureDragConstraints = _a.onMeasureDragConstraints, transformPagePoint = _a.transformPagePoint;\n        var constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        this.constraintsBox = getBoundingBox(constraintsElement, transformPagePoint);\n        var measuredConstraints = calcViewportConstraints(layoutBox, this.constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            var userConstraints = onMeasureDragConstraints(convertAxisBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToAxisBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    };\n    VisualElementDragControls.prototype.cancelDrag = function () {\n        var _a, _b;\n        this.visualElement.unlockProjectionTarget();\n        (_a = this.cancelLayout) === null || _a === void 0 ? void 0 : _a.call(this);\n        this.isDragging = false;\n        this.panSession && this.panSession.end();\n        this.panSession = null;\n        if (!this.props.dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    };\n    VisualElementDragControls.prototype.stop = function (event, info) {\n        var _a, _b, _c;\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = null;\n        var isDragging = this.isDragging;\n        this.cancelDrag();\n        if (!isDragging)\n            return;\n        var velocity = info.velocity;\n        this.animateDragEnd(velocity);\n        (_c = (_b = this.props).onDragEnd) === null || _c === void 0 ? void 0 : _c.call(_b, event, info);\n    };\n    VisualElementDragControls.prototype.snapToCursor = function (point) {\n        var _this = this;\n        return eachAxis(function (axis) {\n            var drag = _this.props.drag;\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, _this.currentDirection))\n                return;\n            var axisValue = _this.getAxisMotionValue(axis);\n            if (axisValue) {\n                var box = _this.visualElement.getLayoutState().layout;\n                var length_1 = box[axis].max - box[axis].min;\n                var center = box[axis].min + length_1 / 2;\n                var offset = point[axis] - center;\n                _this.originPoint[axis] = point[axis];\n                axisValue.set(offset);\n            }\n            else {\n                _this.cursorProgress[axis] = 0.5;\n                return true;\n            }\n        }).includes(true);\n    };\n    /**\n     * Update the specified axis with the latest pointer information.\n     */\n    VisualElementDragControls.prototype.updateAxis = function (axis, point, offset) {\n        var drag = this.props.drag;\n        // If we're not dragging this axis, do an early return.\n        if (!shouldDrag(axis, drag, this.currentDirection))\n            return;\n        return this.getAxisMotionValue(axis)\n            ? this.updateAxisMotionValue(axis, offset)\n            : this.updateVisualElementAxis(axis, point);\n    };\n    VisualElementDragControls.prototype.updateAxisMotionValue = function (axis, offset) {\n        var axisValue = this.getAxisMotionValue(axis);\n        if (!offset || !axisValue)\n            return;\n        var nextValue = this.originPoint[axis] + offset[axis];\n        var update = this.constraints\n            ? applyConstraints(nextValue, this.constraints[axis], this.elastic[axis])\n            : nextValue;\n        axisValue.set(update);\n    };\n    VisualElementDragControls.prototype.updateVisualElementAxis = function (axis, point) {\n        var _a;\n        // Get the actual layout bounding box of the element\n        var axisLayout = this.visualElement.getLayoutState().layout[axis];\n        // Calculate its current length. In the future we might want to lerp this to animate\n        // between lengths if the layout changes as we change the DOM\n        var axisLength = axisLayout.max - axisLayout.min;\n        // Get the initial progress that the pointer sat on this axis on gesture start.\n        var axisProgress = this.cursorProgress[axis];\n        // Calculate a new min point based on the latest pointer position, constraints and elastic\n        var min = calcConstrainedMinPoint(point[axis], axisLength, axisProgress, (_a = this.constraints) === null || _a === void 0 ? void 0 : _a[axis], this.elastic[axis]);\n        // Update the axis viewport target with this new min and the length\n        this.visualElement.setProjectionTargetAxis(axis, min, min + axisLength);\n    };\n    VisualElementDragControls.prototype.setProps = function (_a) {\n        var _b = _a.drag, drag = _b === void 0 ? false : _b, _c = _a.dragDirectionLock, dragDirectionLock = _c === void 0 ? false : _c, _d = _a.dragPropagation, dragPropagation = _d === void 0 ? false : _d, _e = _a.dragConstraints, dragConstraints = _e === void 0 ? false : _e, _f = _a.dragElastic, dragElastic = _f === void 0 ? defaultElastic : _f, _g = _a.dragMomentum, dragMomentum = _g === void 0 ? true : _g, remainingProps = __rest(_a, [\"drag\", \"dragDirectionLock\", \"dragPropagation\", \"dragConstraints\", \"dragElastic\", \"dragMomentum\"]);\n        this.props = __assign({ drag: drag,\n            dragDirectionLock: dragDirectionLock,\n            dragPropagation: dragPropagation,\n            dragConstraints: dragConstraints,\n            dragElastic: dragElastic,\n            dragMomentum: dragMomentum }, remainingProps);\n    };\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - If the component will perform layout animations, we output the gesture to the component's\n     *      visual bounding box\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    VisualElementDragControls.prototype.getAxisMotionValue = function (axis) {\n        var _a = this.props, layout = _a.layout, layoutId = _a.layoutId;\n        var dragKey = \"_drag\" + axis.toUpperCase();\n        if (this.props[dragKey]) {\n            return this.props[dragKey];\n        }\n        else if (!layout && layoutId === undefined) {\n            return this.visualElement.getValue(axis, 0);\n        }\n    };\n    VisualElementDragControls.prototype.isLayoutDrag = function () {\n        return !this.getAxisMotionValue(\"x\");\n    };\n    VisualElementDragControls.prototype.isExternalDrag = function () {\n        var _a = this.props, _dragX = _a._dragX, _dragY = _a._dragY;\n        return _dragX || _dragY;\n    };\n    VisualElementDragControls.prototype.animateDragEnd = function (velocity) {\n        var _this = this;\n        var _a = this.props, drag = _a.drag, dragMomentum = _a.dragMomentum, dragElastic = _a.dragElastic, dragTransition = _a.dragTransition;\n        /**\n         * Everything beyond the drag gesture should be performed with\n         * relative projection so children stay in sync with their parent element.\n         */\n        var isRelative = convertToRelativeProjection(this.visualElement, this.isLayoutDrag() && !this.isExternalDrag());\n        /**\n         * If we had previously resolved constraints relative to the viewport,\n         * we need to also convert those to a relative coordinate space for the animation\n         */\n        var constraints = this.constraints || {};\n        if (isRelative &&\n            Object.keys(constraints).length &&\n            this.isLayoutDrag()) {\n            var projectionParent = this.visualElement.getProjectionParent();\n            if (projectionParent) {\n                var relativeConstraints_1 = calcRelativeOffset(projectionParent.projection.targetFinal, constraints);\n                eachAxis(function (axis) {\n                    var _a = relativeConstraints_1[axis], min = _a.min, max = _a.max;\n                    constraints[axis] = {\n                        min: isNaN(min) ? undefined : min,\n                        max: isNaN(max) ? undefined : max,\n                    };\n                });\n            }\n        }\n        var momentumAnimations = eachAxis(function (axis) {\n            var _a;\n            if (!shouldDrag(axis, drag, _this.currentDirection)) {\n                return;\n            }\n            var transition = (_a = constraints === null || constraints === void 0 ? void 0 : constraints[axis]) !== null && _a !== void 0 ? _a : {};\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            var bounceStiffness = dragElastic ? 200 : 1000000;\n            var bounceDamping = dragElastic ? 40 : 10000000;\n            var inertia = __assign(__assign({ type: \"inertia\", velocity: dragMomentum ? velocity[axis] : 0, bounceStiffness: bounceStiffness,\n                bounceDamping: bounceDamping, timeConstant: 750, restDelta: 1, restSpeed: 10 }, dragTransition), transition);\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return _this.getAxisMotionValue(axis)\n                ? _this.startAxisValueAnimation(axis, inertia)\n                : _this.visualElement.startLayoutAnimation(axis, inertia, isRelative);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(function () {\n            var _a, _b;\n            (_b = (_a = _this.props).onDragTransitionEnd) === null || _b === void 0 ? void 0 : _b.call(_a);\n        });\n    };\n    VisualElementDragControls.prototype.stopMotion = function () {\n        var _this = this;\n        eachAxis(function (axis) {\n            var axisValue = _this.getAxisMotionValue(axis);\n            axisValue\n                ? axisValue.stop()\n                : _this.visualElement.stopLayoutAnimation();\n        });\n    };\n    VisualElementDragControls.prototype.startAxisValueAnimation = function (axis, transition) {\n        var axisValue = this.getAxisMotionValue(axis);\n        if (!axisValue)\n            return;\n        var currentValue = axisValue.get();\n        axisValue.set(currentValue);\n        axisValue.set(currentValue); // Set twice to hard-reset velocity\n        return startAnimation(axis, axisValue, 0, transition);\n    };\n    VisualElementDragControls.prototype.scalePoint = function () {\n        var _this = this;\n        var _a = this.props, drag = _a.drag, dragConstraints = _a.dragConstraints;\n        if (!isRefObject(dragConstraints) || !this.constraintsBox)\n            return;\n        // Stop any current animations as there can be some visual glitching if we resize mid animation\n        this.stopMotion();\n        // Record the relative progress of the targetBox relative to the constraintsBox\n        var boxProgress = { x: 0, y: 0 };\n        eachAxis(function (axis) {\n            boxProgress[axis] = calcOrigin(_this.visualElement.projection.target[axis], _this.constraintsBox[axis]);\n        });\n        /**\n         * For each axis, calculate the current progress of the layout axis within the constraints.\n         * Then, using the latest layout and constraints measurements, reposition the new layout axis\n         * proportionally within the constraints.\n         */\n        this.updateConstraints(function () {\n            eachAxis(function (axis) {\n                if (!shouldDrag(axis, drag, null))\n                    return;\n                // Calculate the position of the targetBox relative to the constraintsBox using the\n                // previously calculated progress\n                var _a = calcPositionFromProgress(_this.visualElement.projection.target[axis], _this.constraintsBox[axis], boxProgress[axis]), min = _a.min, max = _a.max;\n                _this.visualElement.setProjectionTargetAxis(axis, min, max);\n            });\n        });\n        /**\n         * If any other draggable components are queuing the same tasks synchronously\n         * this will wait until they've all been scheduled before flushing.\n         */\n        setTimeout(flushLayout, 1);\n    };\n    VisualElementDragControls.prototype.updateConstraints = function (onReady) {\n        var _this = this;\n        this.cancelLayout = batchLayout(function (read, write) {\n            var ancestors = collectProjectingAncestors(_this.visualElement);\n            write(function () {\n                return ancestors.forEach(function (element) { return element.resetTransform(); });\n            });\n            read(function () { return updateLayoutMeasurement(_this.visualElement); });\n            write(function () {\n                return ancestors.forEach(function (element) { return element.restoreTransform(); });\n            });\n            read(function () {\n                _this.resolveDragConstraints();\n            });\n            if (onReady)\n                write(onReady);\n        });\n    };\n    VisualElementDragControls.prototype.mount = function (visualElement) {\n        var _this = this;\n        var element = visualElement.getInstance();\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        var stopPointerListener = addPointerEvent(element, \"pointerdown\", function (event) {\n            var _a = _this.props, drag = _a.drag, _b = _a.dragListener, dragListener = _b === void 0 ? true : _b;\n            drag && dragListener && _this.start(event);\n        });\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        var stopResizeListener = addDomEvent(window, \"resize\", function () {\n            _this.scalePoint();\n        });\n        /**\n         * Ensure drag constraints are resolved correctly relative to the dragging element\n         * whenever its layout changes.\n         */\n        var stopLayoutUpdateListener = visualElement.onLayoutUpdate(function () {\n            if (_this.isDragging) {\n                _this.resolveDragConstraints();\n            }\n        });\n        /**\n         * If the previous component with this same layoutId was dragging at the time\n         * it was unmounted, we want to continue the same gesture on this component.\n         */\n        var prevDragCursor = visualElement.prevDragCursor;\n        if (prevDragCursor) {\n            this.start(lastPointerEvent, { cursorProgress: prevDragCursor });\n        }\n        /**\n         * Return a function that will teardown the drag gesture\n         */\n        return function () {\n            stopPointerListener === null || stopPointerListener === void 0 ? void 0 : stopPointerListener();\n            stopResizeListener === null || stopResizeListener === void 0 ? void 0 : stopResizeListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n            _this.cancelDrag();\n        };\n    };\n    return VisualElementDragControls;\n}());\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold) {\n    if (lockThreshold === void 0) { lockThreshold = 10; }\n    var direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { calcRelativeOffset } from '../../../motion/features/layout/utils.js';\nimport { eachAxis } from '../../../utils/each-axis.js';\nimport { removeBoxTransforms } from '../../../utils/geometry/delta-apply.js';\n\n/**\n * Returns a boolean stating whether or not we converted the projection\n * to relative projection.\n */\nfunction convertToRelativeProjection(visualElement, isLayoutDrag) {\n    if (isLayoutDrag === void 0) { isLayoutDrag = true; }\n    var projectionParent = visualElement.getProjectionParent();\n    if (!projectionParent)\n        return false;\n    var offset;\n    if (isLayoutDrag) {\n        offset = calcRelativeOffset(projectionParent.projection.target, visualElement.projection.target);\n        removeBoxTransforms(offset, projectionParent.getLatestValues());\n    }\n    else {\n        offset = calcRelativeOffset(projectionParent.getLayoutState().layout, visualElement.getLayoutState().layout);\n    }\n    eachAxis(function (axis) {\n        return visualElement.setProjectionTargetAxis(axis, offset[axis].min, offset[axis].max, true);\n    });\n    return true;\n}\n\nexport { convertToRelativeProjection };\n","var makeRenderlessComponent = function (hook) { return function (props) {\n    hook(props);\n    return null;\n}; };\n\nexport { makeRenderlessComponent };\n","import { useDrag } from '../../gestures/drag/use-drag.js';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.js';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.js';\n\nvar drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.js';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.js';\nimport { usePointerEvent } from '../events/use-pointer-event.js';\nimport { PanSession } from './PanSession.js';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @internalremarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture(_a) {\n    var onPan = _a.onPan, onPanStart = _a.onPanStart, onPanEnd = _a.onPanEnd, onPanSessionStart = _a.onPanSessionStart, visualElement = _a.visualElement;\n    var hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    var panSession = useRef(null);\n    var transformPagePoint = useContext(MotionConfigContext).transformPagePoint;\n    var handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: function (event, info) {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(function () {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint: transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(function () { return panSession.current && panSession.current.end(); });\n}\n\nexport { usePanGesture };\n","import { __assign } from 'tslib';\nimport { useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.js';\nimport { VisualElementDragControls } from './VisualElementDragControls.js';\nimport { useConstant } from '../../utils/use-constant.js';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    var groupDragControls = props.dragControls, visualElement = props.visualElement;\n    var transformPagePoint = useContext(MotionConfigContext).transformPagePoint;\n    var dragControls = useConstant(function () {\n        return new VisualElementDragControls({\n            visualElement: visualElement,\n        });\n    });\n    dragControls.setProps(__assign(__assign({}, props), { transformPagePoint: transformPagePoint }));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(function () { return groupDragControls && groupDragControls.subscribe(dragControls); }, [dragControls]);\n    // Mount the drag controls with the visualElement\n    useEffect(function () { return dragControls.mount(visualElement); }, []);\n}\n\nexport { useDrag };\n","import { __rest, __assign, __read } from 'tslib';\nimport { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nvar cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    var match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    var _a = __read(match, 3), token = _a[1], fallback = _a[2];\n    return [token, fallback];\n}\nvar maxDepth = 4;\nfunction getVariableValue(current, element, depth) {\n    if (depth === void 0) { depth = 1; }\n    invariant(depth <= maxDepth, \"Max CSS variable fallback depth detected in property \\\"\" + current + \"\\\". This may indicate a circular fallback dependency.\");\n    var _a = __read(parseCSSVariable(current), 2), token = _a[0], fallback = _a[1];\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    var resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, _a, transitionEnd) {\n    var _b;\n    var target = __rest(_a, []);\n    var element = visualElement.getInstance();\n    if (!(element instanceof HTMLElement))\n        return { target: target, transitionEnd: transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = __assign({}, transitionEnd);\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.forEachValue(function (value) {\n        var current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        var resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (var key in target) {\n        var current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        var resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd)\n            (_b = transitionEnd[key]) !== null && _b !== void 0 ? _b : (transitionEnd[key] = current);\n    }\n    return { target: target, transitionEnd: transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { __assign } from 'tslib';\nimport { complex, px } from 'style-value-types';\nimport { mix } from 'popmotion';\nimport { cssVariableRegex } from '../utils/css-variables-conversion.js';\n\nfunction pixelsToPercent(pixels, axis) {\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nfunction correctBorderRadius(latest, _layoutState, _a) {\n    var target = _a.target;\n    /**\n     * If latest is a string, if it's a percentage we can return immediately as it's\n     * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n     */\n    if (typeof latest === \"string\") {\n        if (px.test(latest)) {\n            latest = parseFloat(latest);\n        }\n        else {\n            return latest;\n        }\n    }\n    /**\n     * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n     * pixel value as a percentage of each axis\n     */\n    var x = pixelsToPercent(latest, target.x);\n    var y = pixelsToPercent(latest, target.y);\n    return x + \"% \" + y + \"%\";\n}\nvar varToken = \"_$css\";\nfunction correctBoxShadow(latest, _a) {\n    var delta = _a.delta, treeScale = _a.treeScale;\n    var original = latest;\n    /**\n     * We need to first strip and store CSS variables from the string.\n     */\n    var containsCSSVariables = latest.includes(\"var(\");\n    var cssVariables = [];\n    if (containsCSSVariables) {\n        latest = latest.replace(cssVariableRegex, function (match) {\n            cssVariables.push(match);\n            return varToken;\n        });\n    }\n    var shadow = complex.parse(latest);\n    // TODO: Doesn't support multiple shadows\n    if (shadow.length > 5)\n        return original;\n    var template = complex.createTransformer(latest);\n    var offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n    // Calculate the overall context scale\n    var xScale = delta.x.scale * treeScale.x;\n    var yScale = delta.y.scale * treeScale.y;\n    shadow[0 + offset] /= xScale;\n    shadow[1 + offset] /= yScale;\n    /**\n     * Ideally we'd correct x and y scales individually, but because blur and\n     * spread apply to both we have to take a scale average and apply that instead.\n     * We could potentially improve the outcome of this by incorporating the ratio between\n     * the two scales.\n     */\n    var averageScale = mix(xScale, yScale, 0.5);\n    // Blur\n    if (typeof shadow[2 + offset] === \"number\")\n        shadow[2 + offset] /= averageScale;\n    // Spread\n    if (typeof shadow[3 + offset] === \"number\")\n        shadow[3 + offset] /= averageScale;\n    var output = template(shadow);\n    if (containsCSSVariables) {\n        var i_1 = 0;\n        output = output.replace(varToken, function () {\n            var cssVariable = cssVariables[i_1];\n            i_1++;\n            return cssVariable;\n        });\n    }\n    return output;\n}\nvar borderCorrectionDefinition = {\n    process: correctBorderRadius,\n};\nvar defaultScaleCorrectors = {\n    borderRadius: __assign(__assign({}, borderCorrectionDefinition), { applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ] }),\n    borderTopLeftRadius: borderCorrectionDefinition,\n    borderTopRightRadius: borderCorrectionDefinition,\n    borderBottomLeftRadius: borderCorrectionDefinition,\n    borderBottomRightRadius: borderCorrectionDefinition,\n    boxShadow: {\n        process: correctBoxShadow,\n    },\n};\n\nexport { correctBorderRadius, correctBoxShadow, defaultScaleCorrectors, pixelsToPercent };\n","import { __extends, __rest, __assign, __read } from 'tslib';\nimport * as React from 'react';\nimport { eachAxis } from '../../../utils/each-axis.js';\nimport { startAnimation, getValueTransition } from '../../../animation/utils/transitions.js';\nimport { checkIfParentHasChanged, calcRelativeOffset, tweenAxis } from './utils.js';\nimport { VisibilityAction } from '../../../components/AnimateSharedLayout/types.js';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.js';\nimport { axisBox } from '../../../utils/geometry/index.js';\nimport { addScaleCorrection } from '../../../render/dom/projection/scale-correction.js';\nimport { defaultScaleCorrectors } from '../../../render/dom/projection/default-scale-correctors.js';\n\nvar progressTarget = 1000;\nvar Animate = /** @class */ (function (_super) {\n    __extends(Animate, _super);\n    function Animate() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * A mutable object that tracks the target viewport box\n         * for the current animation frame.\n         */\n        _this.frameTarget = axisBox();\n        /**\n         * The current animation target, we use this to check whether to start\n         * a new animation or continue the existing one.\n         */\n        _this.currentAnimationTarget = axisBox();\n        /**\n         * Track whether we're animating this axis.\n         */\n        _this.isAnimating = {\n            x: false,\n            y: false,\n        };\n        _this.stopAxisAnimation = {\n            x: undefined,\n            y: undefined,\n        };\n        _this.isAnimatingTree = false;\n        _this.animate = function (target, origin, _a) {\n            if (_a === void 0) { _a = {}; }\n            var originBox = _a.originBox, targetBox = _a.targetBox, visibilityAction = _a.visibilityAction, shouldStackAnimate = _a.shouldStackAnimate, onComplete = _a.onComplete, prevParent = _a.prevParent, config = __rest(_a, [\"originBox\", \"targetBox\", \"visibilityAction\", \"shouldStackAnimate\", \"onComplete\", \"prevParent\"]);\n            var _b = _this.props, visualElement = _b.visualElement, layout = _b.layout;\n            /**\n             * Early return if we've been instructed not to animate this render.\n             */\n            if (shouldStackAnimate === false) {\n                _this.isAnimatingTree = false;\n                return _this.safeToRemove();\n            }\n            /**\n             * Prioritise tree animations\n             */\n            if (_this.isAnimatingTree && shouldStackAnimate !== true) {\n                return;\n            }\n            else if (shouldStackAnimate) {\n                _this.isAnimatingTree = true;\n            }\n            /**\n             * Allow the measured origin (prev bounding box) and target (actual layout) to be\n             * overridden by the provided config.\n             */\n            origin = originBox || origin;\n            target = targetBox || target;\n            /**\n             * If this element has a projecting parent, there's an opportunity to animate\n             * it relatively to that parent rather than relatively to the viewport. This\n             * allows us to add orchestrated animations.\n             */\n            var isRelative = false;\n            var projectionParent = visualElement.getProjectionParent();\n            if (projectionParent) {\n                var prevParentViewportBox = projectionParent.prevViewportBox;\n                var parentLayout = projectionParent.getLayoutState().layout;\n                /**\n                 * If we're being provided a previous parent VisualElement by AnimateSharedLayout\n                 */\n                if (prevParent) {\n                    /**\n                     * If we've been provided an explicit target box it means we're animating back\n                     * to this previous parent. So we can make a relative box by comparing to the previous\n                     * parent's layout\n                     */\n                    if (targetBox) {\n                        parentLayout = prevParent.getLayoutState().layout;\n                    }\n                    /**\n                     * Likewise if we've been provided an explicit origin box it means we're\n                     * animating out from a different element. So we should figure out where that was\n                     * on screen relative to the new parent element.\n                     */\n                    if (originBox &&\n                        !checkIfParentHasChanged(prevParent, projectionParent) &&\n                        prevParent.prevViewportBox) {\n                        prevParentViewportBox = prevParent.prevViewportBox;\n                    }\n                }\n                if (prevParentViewportBox &&\n                    isProvidedCorrectDataForRelativeSharedLayout(prevParent, originBox, targetBox)) {\n                    isRelative = true;\n                    origin = calcRelativeOffset(prevParentViewportBox, origin);\n                    target = calcRelativeOffset(parentLayout, target);\n                }\n            }\n            var boxHasMoved = hasMoved(origin, target);\n            var animations = eachAxis(function (axis) {\n                var _a, _b;\n                /**\n                 * If layout is set to \"position\", we can resize the origin box based on the target\n                 * box and only animate its position.\n                 */\n                if (layout === \"position\") {\n                    var targetLength = target[axis].max - target[axis].min;\n                    origin[axis].max = origin[axis].min + targetLength;\n                }\n                if (visualElement.projection.isTargetLocked) {\n                    return;\n                }\n                else if (visibilityAction !== undefined) {\n                    visualElement.setVisibility(visibilityAction === VisibilityAction.Show);\n                }\n                else if (boxHasMoved) {\n                    // If the box has moved, animate between it's current visual state and its\n                    // final state\n                    return _this.animateAxis(axis, target[axis], origin[axis], __assign(__assign({}, config), { isRelative: isRelative }));\n                }\n                else {\n                    (_b = (_a = _this.stopAxisAnimation)[axis]) === null || _b === void 0 ? void 0 : _b.call(_a);\n                    // If the box has remained in the same place, immediately set the axis target\n                    // to the final desired state\n                    return visualElement.setProjectionTargetAxis(axis, target[axis].min, target[axis].max, isRelative);\n                }\n            });\n            // Force a render to ensure there's no flash of uncorrected bounding box.\n            visualElement.syncRender();\n            /**\n             * If this visualElement isn't present (ie it's been removed from the tree by the user but\n             * kept in by the tree by AnimatePresence) then call safeToRemove when all axis animations\n             * have successfully finished.\n             */\n            return Promise.all(animations).then(function () {\n                _this.isAnimatingTree = false;\n                onComplete && onComplete();\n                visualElement.notifyLayoutAnimationComplete();\n            });\n        };\n        return _this;\n    }\n    Animate.prototype.componentDidMount = function () {\n        var _this = this;\n        var visualElement = this.props.visualElement;\n        visualElement.animateMotionValue = startAnimation;\n        visualElement.enableLayoutProjection();\n        this.unsubLayoutReady = visualElement.onLayoutUpdate(this.animate);\n        visualElement.layoutSafeToRemove = function () { return _this.safeToRemove(); };\n        addScaleCorrection(defaultScaleCorrectors);\n    };\n    Animate.prototype.componentWillUnmount = function () {\n        var _this = this;\n        this.unsubLayoutReady();\n        eachAxis(function (axis) { var _a, _b; return (_b = (_a = _this.stopAxisAnimation)[axis]) === null || _b === void 0 ? void 0 : _b.call(_a); });\n    };\n    /**\n     * TODO: This manually performs animations on the visualElement's layout progress\n     * values. It'd be preferable to amend the startLayoutAxisAnimation\n     * API to accept more custom animations like this.\n     */\n    Animate.prototype.animateAxis = function (axis, target, origin, _a) {\n        var _this = this;\n        var _b, _c;\n        var _d = _a === void 0 ? {} : _a, transition = _d.transition, isRelative = _d.isRelative;\n        /**\n         * If we're not animating to a new target, don't run this animation\n         */\n        if (this.isAnimating[axis] &&\n            axisIsEqual(target, this.currentAnimationTarget[axis])) {\n            return;\n        }\n        (_c = (_b = this.stopAxisAnimation)[axis]) === null || _c === void 0 ? void 0 : _c.call(_b);\n        this.isAnimating[axis] = true;\n        var visualElement = this.props.visualElement;\n        var frameTarget = this.frameTarget[axis];\n        var layoutProgress = visualElement.getProjectionAnimationProgress()[axis];\n        /**\n         * Set layout progress back to 0. We set it twice to hard-reset any velocity that might\n         * be re-incoporated into a subsequent spring animation.\n         */\n        layoutProgress.clearListeners();\n        layoutProgress.set(0);\n        layoutProgress.set(0);\n        /**\n         * Create an animation function to run once per frame. This will tween the visual bounding box from\n         * origin to target using the latest progress value.\n         */\n        var frame = function () {\n            // Convert the latest layoutProgress, which is a value from 0-1000, into a 0-1 progress\n            var p = layoutProgress.get() / progressTarget;\n            // Tween the axis and update the visualElement with the latest values\n            tweenAxis(frameTarget, origin, target, p);\n            visualElement.setProjectionTargetAxis(axis, frameTarget.min, frameTarget.max, isRelative);\n        };\n        // Synchronously run a frame to ensure there's no flash of the uncorrected bounding box.\n        frame();\n        // Create a function to stop animation on this specific axis\n        var unsubscribeProgress = layoutProgress.onChange(frame);\n        this.stopAxisAnimation[axis] = function () {\n            _this.isAnimating[axis] = false;\n            layoutProgress.stop();\n            unsubscribeProgress();\n        };\n        this.currentAnimationTarget[axis] = target;\n        var layoutTransition = transition ||\n            visualElement.getDefaultTransition() ||\n            defaultLayoutTransition;\n        // Start the animation on this axis\n        var animation = startAnimation(axis === \"x\" ? \"layoutX\" : \"layoutY\", layoutProgress, progressTarget, layoutTransition && getValueTransition(layoutTransition, \"layout\")).then(this.stopAxisAnimation[axis]);\n        return animation;\n    };\n    Animate.prototype.safeToRemove = function () {\n        var _a, _b;\n        (_b = (_a = this.props).safeToRemove) === null || _b === void 0 ? void 0 : _b.call(_a);\n    };\n    Animate.prototype.render = function () {\n        return null;\n    };\n    return Animate;\n}(React.Component));\nfunction AnimateLayoutContextProvider(props) {\n    var _a = __read(usePresence(), 2), safeToRemove = _a[1];\n    return React.createElement(Animate, __assign({}, props, { safeToRemove: safeToRemove }));\n}\nfunction hasMoved(a, b) {\n    return (!isZeroBox(a) &&\n        !isZeroBox(b) &&\n        (!axisIsEqual(a.x, b.x) || !axisIsEqual(a.y, b.y)));\n}\nvar zeroAxis = { min: 0, max: 0 };\nfunction isZeroBox(a) {\n    return axisIsEqual(a.x, zeroAxis) && axisIsEqual(a.y, zeroAxis);\n}\nfunction axisIsEqual(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nvar defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction isProvidedCorrectDataForRelativeSharedLayout(prevParent, originBox, targetBox) {\n    return prevParent || (!prevParent && !(originBox || targetBox));\n}\n\nexport { AnimateLayoutContextProvider };\n","import { __extends, __assign } from 'tslib';\nimport React__default, { useContext } from 'react';\nimport { isSharedLayout, SharedLayoutContext, FramerTreeLayoutContext } from '../../../context/SharedLayoutContext.js';\nimport { snapshotViewportBox } from '../../../render/dom/projection/utils.js';\n\n/**\n * This component is responsible for scheduling the measuring of the motion component\n */\nvar Measure = /** @class */ (function (_super) {\n    __extends(Measure, _super);\n    function Measure() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * If this is a child of a SyncContext, register the VisualElement with it on mount.\n     */\n    Measure.prototype.componentDidMount = function () {\n        var _a = this.props, syncLayout = _a.syncLayout, framerSyncLayout = _a.framerSyncLayout, visualElement = _a.visualElement;\n        isSharedLayout(syncLayout) && syncLayout.register(visualElement);\n        isSharedLayout(framerSyncLayout) &&\n            framerSyncLayout.register(visualElement);\n        visualElement.onUnmount(function () {\n            if (isSharedLayout(syncLayout)) {\n                syncLayout.remove(visualElement);\n            }\n            if (isSharedLayout(framerSyncLayout)) {\n                framerSyncLayout.remove(visualElement);\n            }\n        });\n    };\n    /**\n     * If this is a child of a SyncContext, notify it that it needs to re-render. It will then\n     * handle the snapshotting.\n     *\n     * If it is stand-alone component, add it to the batcher.\n     */\n    Measure.prototype.getSnapshotBeforeUpdate = function () {\n        var _a = this.props, syncLayout = _a.syncLayout, visualElement = _a.visualElement;\n        if (isSharedLayout(syncLayout)) {\n            syncLayout.syncUpdate();\n        }\n        else {\n            snapshotViewportBox(visualElement);\n            syncLayout.add(visualElement);\n        }\n        return null;\n    };\n    Measure.prototype.componentDidUpdate = function () {\n        var syncLayout = this.props.syncLayout;\n        if (!isSharedLayout(syncLayout))\n            syncLayout.flush();\n    };\n    Measure.prototype.render = function () {\n        return null;\n    };\n    return Measure;\n}(React__default.Component));\nfunction MeasureContextProvider(props) {\n    var syncLayout = useContext(SharedLayoutContext);\n    var framerSyncLayout = useContext(FramerTreeLayoutContext);\n    return (React__default.createElement(Measure, __assign({}, props, { syncLayout: syncLayout, framerSyncLayout: framerSyncLayout })));\n}\n\nexport { MeasureContextProvider };\n","import { AnimateLayoutContextProvider } from './Animate.js';\nimport { MeasureContextProvider } from './Measure.js';\n\nvar layoutAnimations = {\n    measureLayout: MeasureContextProvider,\n    layoutAnimation: AnimateLayoutContextProvider,\n};\n\nexport { layoutAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    var prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (var i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nvar isNumericalString = function (v) { return /^\\-?\\d*\\.?\\d+$/.test(v); };\n\nexport { isNumericalString };\n","function addUniqueItem(arr, item) {\n    arr.indexOf(item) === -1 && arr.push(item);\n}\nfunction removeItem(arr, item) {\n    var index = arr.indexOf(item);\n    index > -1 && arr.splice(index, 1);\n}\n\nexport { addUniqueItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.js';\n\nvar SubscriptionManager = /** @class */ (function () {\n    function SubscriptionManager() {\n        this.subscriptions = [];\n    }\n    SubscriptionManager.prototype.add = function (handler) {\n        var _this = this;\n        addUniqueItem(this.subscriptions, handler);\n        return function () { return removeItem(_this.subscriptions, handler); };\n    };\n    SubscriptionManager.prototype.notify = function (a, b, c) {\n        var numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (var i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                var handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    };\n    SubscriptionManager.prototype.getSize = function () {\n        return this.subscriptions.length;\n    };\n    SubscriptionManager.prototype.clear = function () {\n        this.subscriptions.length = 0;\n    };\n    return SubscriptionManager;\n}());\n\nexport { SubscriptionManager };\n","import sync, { getFrameData } from 'framesync';\nimport { velocityPerSecond } from 'popmotion';\nimport { SubscriptionManager } from '../utils/subscription-manager.js';\n\nvar isFloat = function (value) {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nvar MotionValue = /** @class */ (function () {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    function MotionValue(init) {\n        var _this = this;\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Functions to notify when the `MotionValue` updates.\n         *\n         * @internal\n         */\n        this.updateSubscribers = new SubscriptionManager();\n        /**\n         * Functions to notify when the velocity updates.\n         *\n         * @internal\n         */\n        this.velocityUpdateSubscribers = new SubscriptionManager();\n        /**\n         * Functions to notify when the `MotionValue` updates and `render` is set to `true`.\n         *\n         * @internal\n         */\n        this.renderSubscribers = new SubscriptionManager();\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        this.updateAndNotify = function (v, render) {\n            if (render === void 0) { render = true; }\n            _this.prev = _this.current;\n            _this.current = v;\n            // Update timestamp\n            var _a = getFrameData(), delta = _a.delta, timestamp = _a.timestamp;\n            if (_this.lastUpdated !== timestamp) {\n                _this.timeDelta = delta;\n                _this.lastUpdated = timestamp;\n                sync.postRender(_this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (_this.prev !== _this.current) {\n                _this.updateSubscribers.notify(_this.current);\n            }\n            // Update velocity subscribers\n            if (_this.velocityUpdateSubscribers.getSize()) {\n                _this.velocityUpdateSubscribers.notify(_this.getVelocity());\n            }\n            // Update render subscribers\n            if (render) {\n                _this.renderSubscribers.notify(_this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = function () { return sync.postRender(_this.velocityCheck); };\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = function (_a) {\n            var timestamp = _a.timestamp;\n            if (timestamp !== _this.lastUpdated) {\n                _this.prev = _this.current;\n                _this.velocityUpdateSubscribers.notify(_this.getVelocity());\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * @library\n     *\n     * ```jsx\n     * function MyComponent() {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.onChange(updateOpacity)\n     *     const unsubscribeY = y.onChange(updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <Frame x={x} />\n     * }\n     * ```\n     *\n     * @motion\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.onChange(updateOpacity)\n     *     const unsubscribeY = y.onChange(updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @internalremarks\n     *\n     * We could look into a `useOnChange` hook if the above lifecycle management proves confusing.\n     *\n     * ```jsx\n     * useOnChange(x, () => {})\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @public\n     */\n    MotionValue.prototype.onChange = function (subscription) {\n        return this.updateSubscribers.add(subscription);\n    };\n    MotionValue.prototype.clearListeners = function () {\n        this.updateSubscribers.clear();\n    };\n    /**\n     * Adds a function that will be notified when the `MotionValue` requests a render.\n     *\n     * @param subscriber - A function that's provided the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @internal\n     */\n    MotionValue.prototype.onRenderRequest = function (subscription) {\n        // Render immediately\n        subscription(this.get());\n        return this.renderSubscribers.add(subscription);\n    };\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    MotionValue.prototype.attach = function (passiveEffect) {\n        this.passiveEffect = passiveEffect;\n    };\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    MotionValue.prototype.set = function (v, render) {\n        if (render === void 0) { render = true; }\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    };\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    MotionValue.prototype.get = function () {\n        return this.current;\n    };\n    /**\n     * @public\n     */\n    MotionValue.prototype.getPrevious = function () {\n        return this.prev;\n    };\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    MotionValue.prototype.getVelocity = function () {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    };\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    MotionValue.prototype.start = function (animation) {\n        var _this = this;\n        this.stop();\n        return new Promise(function (resolve) {\n            _this.hasAnimated = true;\n            _this.stopAnimation = animation(resolve);\n        }).then(function () { return _this.clearAnimation(); });\n    };\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    MotionValue.prototype.stop = function () {\n        if (this.stopAnimation)\n            this.stopAnimation();\n        this.clearAnimation();\n    };\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    MotionValue.prototype.isAnimating = function () {\n        return !!this.stopAnimation;\n    };\n    MotionValue.prototype.clearAnimation = function () {\n        this.stopAnimation = null;\n    };\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    MotionValue.prototype.destroy = function () {\n        this.updateSubscribers.clear();\n        this.renderSubscribers.clear();\n        this.stop();\n    };\n    return MotionValue;\n}());\n/**\n * @internal\n */\nfunction motionValue(init) {\n    return new MotionValue(init);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nvar testValueType = function (v) { return function (type) { return type.test(v); }; };\n\nexport { testValueType };\n","import { number, px, percent, degrees, vw, vh } from 'style-value-types';\nimport { testValueType } from './test.js';\nimport { auto } from './type-auto.js';\n\n/**\n * A list of value types commonly used for dimensions\n */\nvar dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nvar findDimensionValueType = function (v) {\n    return dimensionValueTypes.find(testValueType(v));\n};\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nvar auto = {\n    test: function (v) { return v === \"auto\"; },\n    parse: function (v) { return v; },\n};\n\nexport { auto };\n","import { __spreadArray, __read } from 'tslib';\nimport { color, complex } from 'style-value-types';\nimport { dimensionValueTypes } from './dimensions.js';\nimport { testValueType } from './test.js';\n\n/**\n * A list of all ValueTypes\n */\nvar valueTypes = __spreadArray(__spreadArray([], __read(dimensionValueTypes)), [color, complex]);\n/**\n * Tests a value against the list of ValueTypes\n */\nvar findValueType = function (v) { return valueTypes.find(testValueType(v)); };\n\nexport { findValueType };\n","import { __rest, __assign, __spreadArray, __read } from 'tslib';\nimport { complex } from 'style-value-types';\nimport { isNumericalString } from '../../utils/is-numerical-string.js';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.js';\nimport { motionValue } from '../../value/index.js';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.js';\nimport { findValueType } from '../dom/value-types/find.js';\nimport { resolveVariant } from './variants.js';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    var resolved = resolveVariant(visualElement, definition);\n    var _a = resolved\n        ? visualElement.makeTargetAnimatable(resolved, false)\n        : {}, _b = _a.transitionEnd, transitionEnd = _b === void 0 ? {} : _b; _a.transition; var target = __rest(_a, [\"transitionEnd\", \"transition\"]);\n    target = __assign(__assign({}, target), transitionEnd);\n    for (var key in target) {\n        var value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    var reversedLabels = __spreadArray([], __read(variantLabels)).reverse();\n    reversedLabels.forEach(function (key) {\n        var _a;\n        var variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach(function (child) {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b, _c;\n    var _d;\n    var newValueKeys = Object.keys(target).filter(function (key) { return !visualElement.hasValue(key); });\n    var numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (var i = 0; i < numNewValues; i++) {\n        var key = newValueKeys[i];\n        var targetValue = target[key];\n        var value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" && isNumericalString(value)) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value));\n        (_c = (_d = origin)[key]) !== null && _c !== void 0 ? _c : (_d[key] = value);\n        visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    var valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a, _b;\n    var origin = {};\n    for (var key in target) {\n        origin[key] =\n            (_a = getOriginFromTransition(key, transition)) !== null && _a !== void 0 ? _a : (_b = visualElement.getValue(key)) === null || _b === void 0 ? void 0 : _b.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { __read, __rest, __assign } from 'tslib';\nimport { startAnimation } from '../../animation/utils/transitions.js';\nimport { setTarget } from './setters.js';\nimport { resolveVariant } from './variants.js';\n\n/**\n * @internal\n */\nfunction animateVisualElement(visualElement, definition, options) {\n    if (options === void 0) { options = {}; }\n    visualElement.notifyAnimationStart();\n    var animation;\n    if (Array.isArray(definition)) {\n        var animations = definition.map(function (variant) {\n            return animateVariant(visualElement, variant, options);\n        });\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        var resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(function () {\n        return visualElement.notifyAnimationComplete(definition);\n    });\n}\nfunction animateVariant(visualElement, variant, options) {\n    var _a;\n    if (options === void 0) { options = {}; }\n    var resolved = resolveVariant(visualElement, variant, options.custom);\n    var _b = (resolved || {}).transition, transition = _b === void 0 ? visualElement.getDefaultTransition() || {} : _b;\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    var getAnimation = resolved\n        ? function () { return animateTarget(visualElement, resolved, options); }\n        : function () { return Promise.resolve(); };\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    var getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? function (forwardDelay) {\n            if (forwardDelay === void 0) { forwardDelay = 0; }\n            var _a = transition.delayChildren, delayChildren = _a === void 0 ? 0 : _a, staggerChildren = transition.staggerChildren, staggerDirection = transition.staggerDirection;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : function () { return Promise.resolve(); };\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    var when = transition.when;\n    if (when) {\n        var _c = __read(when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation], 2), first = _c[0], last = _c[1];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, _a) {\n    var _b;\n    var _c = _a === void 0 ? {} : _a, _d = _c.delay, delay = _d === void 0 ? 0 : _d, transitionOverride = _c.transitionOverride, type = _c.type;\n    var _e = visualElement.makeTargetAnimatable(definition), _f = _e.transition, transition = _f === void 0 ? visualElement.getDefaultTransition() : _f, transitionEnd = _e.transitionEnd, target = __rest(_e, [\"transition\", \"transitionEnd\"]);\n    if (transitionOverride)\n        transition = transitionOverride;\n    var animations = [];\n    var animationTypeState = type && ((_b = visualElement.animationState) === null || _b === void 0 ? void 0 : _b.getState()[type]);\n    for (var key in target) {\n        var value = visualElement.getValue(key);\n        var valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        var animation = startAnimation(key, value, valueTarget, __assign({ delay: delay }, transition));\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(function () {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren, staggerChildren, staggerDirection, options) {\n    if (delayChildren === void 0) { delayChildren = 0; }\n    if (staggerChildren === void 0) { staggerChildren = 0; }\n    if (staggerDirection === void 0) { staggerDirection = 1; }\n    var animations = [];\n    var maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    var generateStaggerDuration = staggerDirection === 1\n        ? function (i) {\n            if (i === void 0) { i = 0; }\n            return i * staggerChildren;\n        }\n        : function (i) {\n            if (i === void 0) { i = 0; }\n            return maxStaggerDuration - i * staggerChildren;\n        };\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach(function (child, i) {\n        animations.push(animateVariant(child, variant, __assign(__assign({}, options), { delay: delayChildren + generateStaggerDuration(i) })).then(function () { return child.notifyAnimationComplete(variant); }));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.forEachValue(function (value) { return value.stop(); });\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation(_a, key) {\n    var protectedKeys = _a.protectedKeys, needsAnimating = _a.needsAnimating;\n    var shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { __spreadArray, __read, __assign, __rest } from 'tslib';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.js';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.js';\nimport { shallowCompare } from '../../utils/shallow-compare.js';\nimport { animateVisualElement } from './animation.js';\nimport { AnimationType } from './types.js';\nimport { isVariantLabels, resolveVariant, isVariantLabel } from './variants.js';\n\nvar variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Focus,\n    AnimationType.Exit,\n];\nvar reversePriorityOrder = __spreadArray([], __read(variantPriorityOrder)).reverse();\nvar numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return function (animations) {\n        return Promise.all(animations.map(function (_a) {\n            var animation = _a.animation, options = _a.options;\n            return animateVisualElement(visualElement, animation, options);\n        }));\n    };\n}\nfunction createAnimationState(visualElement) {\n    var animate = animateList(visualElement);\n    var state = createState();\n    var allAnimatedKeys = {};\n    var isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    var buildResolvedTypeValues = function (acc, definition) {\n        var resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            resolved.transition; var transitionEnd = resolved.transitionEnd, target = __rest(resolved, [\"transition\", \"transitionEnd\"]);\n            acc = __assign(__assign(__assign({}, acc), target), transitionEnd);\n        }\n        return acc;\n    };\n    function isAnimated(key) {\n        return allAnimatedKeys[key] !== undefined;\n    }\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        var _a;\n        var props = visualElement.getProps();\n        var context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        var animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        var removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        var encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        var removedVariantIndex = Infinity;\n        var _loop_1 = function (i) {\n            var type = reversePriorityOrder[i];\n            var typeState = state[type];\n            var prop = (_a = props[type]) !== null && _a !== void 0 ? _a : context[type];\n            var propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            var activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            var isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = __assign({}, encounteredKeys);\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                return \"continue\";\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            var shouldAnimateType = variantsHaveChanged(typeState.prevProp, prop) ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            var definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            var resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            var _b = typeState.prevResolvedValues, prevResolvedValues = _b === void 0 ? {} : _b;\n            var allKeys = __assign(__assign({}, prevResolvedValues), resolvedValues);\n            var markToAnimate = function (key) {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (var key in allKeys) {\n                var next = resolvedValues[key];\n                var prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev)) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = __assign(__assign({}, encounteredKeys), resolvedValues);\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push.apply(animations, __spreadArray([], __read(definitionList.map(function (animation) { return ({\n                    animation: animation,\n                    options: __assign({ type: type }, options),\n                }); }))));\n            }\n        };\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (var i = 0; i < numAnimationTypes; i++) {\n            _loop_1(i);\n        }\n        allAnimatedKeys = __assign({}, encounteredKeys);\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            var fallbackAnimation_1 = {};\n            removedKeys.forEach(function (key) {\n                var fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation_1[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation_1 });\n        }\n        var shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach(function (child) { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        return animateChanges(options, type);\n    }\n    return {\n        isAnimated: isAnimated,\n        animateChanges: animateChanges,\n        setActive: setActive,\n        setAnimateFunction: setAnimateFunction,\n        getState: function () { return state; },\n    };\n}\nfunction variantsHaveChanged(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (isVariantLabels(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive) {\n    if (isActive === void 0) { isActive = false; }\n    return {\n        isActive: isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    var _a;\n    return _a = {},\n        _a[AnimationType.Animate] = createTypeState(true),\n        _a[AnimationType.Hover] = createTypeState(),\n        _a[AnimationType.Tap] = createTypeState(),\n        _a[AnimationType.Drag] = createTypeState(),\n        _a[AnimationType.Focus] = createTypeState(),\n        _a[AnimationType.Exit] = createTypeState(),\n        _a;\n}\n\nexport { createAnimationState, variantPriorityOrder, variantsHaveChanged };\n","import { __read } from 'tslib';\nimport { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.js';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.js';\nimport { PresenceContext } from '../../context/PresenceContext.js';\nimport { createAnimationState } from '../../render/utils/animation-state.js';\nimport { AnimationType } from '../../render/utils/types.js';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.js';\n\nvar animations = {\n    animation: makeRenderlessComponent(function (_a) {\n        var visualElement = _a.visualElement, animate = _a.animate;\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(function () { return animate.subscribe(visualElement); }, [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent(function (props) {\n        var custom = props.custom, visualElement = props.visualElement;\n        var _a = __read(usePresence(), 2), isPresent = _a[0], onExitComplete = _a[1];\n        var presenceContext = useContext(PresenceContext);\n        useEffect(function () {\n            var _a, _b;\n            var animation = (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Exit, !isPresent, { custom: (_b = presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.custom) !== null && _b !== void 0 ? _b : custom });\n            !isPresent && (animation === null || animation === void 0 ? void 0 : animation.then(onExitComplete));\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","import { isMouseEvent } from './utils/event-type.js';\nimport { AnimationType } from '../render/utils/types.js';\nimport { usePointerEvent } from '../events/use-pointer-event.js';\nimport { isDragActive } from './drag/utils/lock.js';\n\nfunction createHoverEvent(visualElement, isActive, callback) {\n    return function (event, info) {\n        var _a;\n        if (!isMouseEvent(event) || isDragActive())\n            return;\n        callback === null || callback === void 0 ? void 0 : callback(event, info);\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Hover, isActive);\n    };\n}\nfunction useHoverGesture(_a) {\n    var onHoverStart = _a.onHoverStart, onHoverEnd = _a.onHoverEnd, whileHover = _a.whileHover, visualElement = _a.visualElement;\n    usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover\n        ? createHoverEvent(visualElement, true, onHoverStart)\n        : undefined);\n    usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover\n        ? createHoverEvent(visualElement, false, onHoverEnd)\n        : undefined);\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nvar isNodeOrChild = function (parent, child) {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.js';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.js';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.js';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.js';\n\nvar gestureAnimations = {\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { useRef } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.js';\nimport { usePointerEvent, addPointerEvent } from '../events/use-pointer-event.js';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.js';\nimport { pipe } from 'popmotion';\nimport { AnimationType } from '../render/utils/types.js';\nimport { isDragActive } from './drag/utils/lock.js';\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture(_a) {\n    var onTap = _a.onTap, onTapStart = _a.onTapStart, onTapCancel = _a.onTapCancel, whileTap = _a.whileTap, visualElement = _a.visualElement;\n    var hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    var isPressing = useRef(false);\n    var cancelPointerEndListeners = useRef(null);\n    function removePointerEndListener() {\n        var _a;\n        (_a = cancelPointerEndListeners.current) === null || _a === void 0 ? void 0 : _a.call(cancelPointerEndListeners);\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        var _a;\n        removePointerEndListener();\n        isPressing.current = false;\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Tap, false);\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.getInstance(), event.target)\n            ? onTapCancel === null || onTapCancel === void 0 ? void 0 : onTapCancel(event, info)\n            : onTap === null || onTap === void 0 ? void 0 : onTap(event, info);\n    }\n    function onPointerCancel(event, info) {\n        if (!checkPointerEnd())\n            return;\n        onTapCancel === null || onTapCancel === void 0 ? void 0 : onTapCancel(event, info);\n    }\n    function onPointerDown(event, info) {\n        var _a;\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp), addPointerEvent(window, \"pointercancel\", onPointerCancel));\n        onTapStart === null || onTapStart === void 0 ? void 0 : onTapStart(event, info);\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Tap, true);\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? onPointerDown : undefined);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","import { AnimationType } from '../render/utils/types.js';\nimport { useDomEvent } from '../events/use-dom-event.js';\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture(_a) {\n    var whileFocus = _a.whileFocus, visualElement = _a.visualElement;\n    var onFocus = function () {\n        var _a;\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Focus, true);\n    };\n    var onBlur = function () {\n        var _a;\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Focus, false);\n    };\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","import { axisBox, delta } from '../../utils/geometry/index.js';\n\nvar createProjectionState = function () { return ({\n    isEnabled: false,\n    isHydrated: false,\n    isTargetLocked: false,\n    target: axisBox(),\n    targetFinal: axisBox(),\n}); };\nfunction createLayoutState() {\n    return {\n        isHydrated: false,\n        layout: axisBox(),\n        layoutCorrected: axisBox(),\n        treeScale: { x: 1, y: 1 },\n        delta: delta(),\n        deltaFinal: delta(),\n        deltaTransform: \"\",\n    };\n}\nvar zeroLayout = createLayoutState();\n\nexport { createLayoutState, createProjectionState, zeroLayout };\n","import { zeroLayout } from '../../utils/state.js';\n\n/**\n * Build a transform style that takes a calculated delta between the element's current\n * space on screen and projects it into the desired space.\n */\nfunction buildLayoutProjectionTransform(_a, treeScale, latestTransform) {\n    var x = _a.x, y = _a.y;\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    var xTranslate = x.translate / treeScale.x;\n    var yTranslate = y.translate / treeScale.y;\n    var transform = \"translate3d(\" + xTranslate + \"px, \" + yTranslate + \"px, 0) \";\n    if (latestTransform) {\n        var rotate = latestTransform.rotate, rotateX = latestTransform.rotateX, rotateY = latestTransform.rotateY;\n        if (rotate)\n            transform += \"rotate(\" + rotate + \") \";\n        if (rotateX)\n            transform += \"rotateX(\" + rotateX + \") \";\n        if (rotateY)\n            transform += \"rotateY(\" + rotateY + \") \";\n    }\n    transform += \"scale(\" + x.scale + \", \" + y.scale + \")\";\n    return !latestTransform && transform === identityProjection ? \"\" : transform;\n}\n/**\n * Take the calculated delta origin and apply it as a transform string.\n */\nfunction buildLayoutProjectionTransformOrigin(_a) {\n    var deltaFinal = _a.deltaFinal;\n    return deltaFinal.x.origin * 100 + \"% \" + deltaFinal.y.origin * 100 + \"% 0\";\n}\nvar identityProjection = buildLayoutProjectionTransform(zeroLayout.delta, zeroLayout.treeScale, { x: 1, y: 1 });\n\nexport { buildLayoutProjectionTransform, buildLayoutProjectionTransformOrigin, identityProjection };\n","import { __spreadArray, __read } from 'tslib';\nimport { SubscriptionManager } from '../../utils/subscription-manager.js';\n\nvar names = [\n    \"LayoutMeasure\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutUpdate\",\n    \"ViewportBoxUpdate\",\n    \"Update\",\n    \"Render\",\n    \"AnimationComplete\",\n    \"LayoutAnimationComplete\",\n    \"AnimationStart\",\n    \"SetAxisTarget\",\n    \"Unmount\",\n];\nfunction createLifecycles() {\n    var managers = names.map(function () { return new SubscriptionManager(); });\n    var propSubscriptions = {};\n    var lifecycles = {\n        clearAllListeners: function () { return managers.forEach(function (manager) { return manager.clear(); }); },\n        updatePropListeners: function (props) {\n            return names.forEach(function (name) {\n                var _a;\n                (_a = propSubscriptions[name]) === null || _a === void 0 ? void 0 : _a.call(propSubscriptions);\n                var on = \"on\" + name;\n                var propListener = props[on];\n                if (propListener) {\n                    propSubscriptions[name] = lifecycles[on](propListener);\n                }\n            });\n        },\n    };\n    managers.forEach(function (manager, i) {\n        lifecycles[\"on\" + names[i]] = function (handler) { return manager.add(handler); };\n        lifecycles[\"notify\" + names[i]] = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return manager.notify.apply(manager, __spreadArray([], __read(args)));\n        };\n    });\n    return lifecycles;\n}\n\nexport { createLifecycles };\n","import { resetBox, applyTreeDeltas } from '../../utils/geometry/delta-apply.js';\nimport { updateBoxDelta } from '../../utils/geometry/delta-calc.js';\n\nfunction updateLayoutDeltas(_a, _b, treePath, transformOrigin) {\n    var delta = _a.delta, layout = _a.layout, layoutCorrected = _a.layoutCorrected, treeScale = _a.treeScale;\n    var target = _b.target;\n    /**\n     * Reset the corrected box with the latest values from box, as we're then going\n     * to perform mutative operations on it.\n     */\n    resetBox(layoutCorrected, layout);\n    /**\n     * Apply all the parent deltas to this box to produce the corrected box. This\n     * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n     */\n    applyTreeDeltas(layoutCorrected, treeScale, treePath);\n    /**\n     * Update the delta between the corrected box and the target box before user-set transforms were applied.\n     * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n     * for our layout reprojection, but still allow them to be scaled correctly by the user.\n     * It might be that to simplify this we may want to accept that user-set scale is also corrected\n     * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n     * to allow people to choose whether these styles are corrected based on just the\n     * layout reprojection or the final bounding box.\n     */\n    updateBoxDelta(delta, layoutCorrected, target, transformOrigin);\n}\n\nexport { updateLayoutDeltas };\n","import { addUniqueItem, removeItem } from '../../utils/array.js';\nimport { compareByDepth } from './compare-by-depth.js';\n\nvar FlatTree = /** @class */ (function () {\n    function FlatTree() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    FlatTree.prototype.add = function (child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    };\n    FlatTree.prototype.remove = function (child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    };\n    FlatTree.prototype.forEach = function (callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    };\n    return FlatTree;\n}());\n\nexport { FlatTree };\n","import { __assign, __spreadArray, __read } from 'tslib';\nimport sync, { cancelSync } from 'framesync';\nimport { pipe } from 'popmotion';\nimport { Presence } from '../components/AnimateSharedLayout/types.js';\nimport { eachAxis } from '../utils/each-axis.js';\nimport { axisBox } from '../utils/geometry/index.js';\nimport { removeBoxTransforms, applyBoxTransforms } from '../utils/geometry/delta-apply.js';\nimport { calcRelativeBox, updateBoxDelta } from '../utils/geometry/delta-calc.js';\nimport { motionValue } from '../value/index.js';\nimport { isMotionValue } from '../value/utils/is-motion-value.js';\nimport { buildLayoutProjectionTransform } from './html/utils/build-projection-transform.js';\nimport { variantPriorityOrder } from './utils/animation-state.js';\nimport { createLifecycles } from './utils/lifecycles.js';\nimport { updateMotionValuesFromProps } from './utils/motion-values.js';\nimport { updateLayoutDeltas } from './utils/projection.js';\nimport { createLayoutState, createProjectionState } from './utils/state.js';\nimport { FlatTree } from './utils/flat-tree.js';\nimport { checkIfControllingVariants, checkIfVariantNode, isVariantLabel } from './utils/variants.js';\nimport { setCurrentViewportBox } from './dom/projection/relative-set.js';\nimport { isDraggable } from './utils/is-draggable.js';\n\nvar visualElement = function (_a) {\n    var _b = _a.treeType, treeType = _b === void 0 ? \"\" : _b, build = _a.build, getBaseTarget = _a.getBaseTarget, makeTargetAnimatable = _a.makeTargetAnimatable, measureViewportBox = _a.measureViewportBox, renderInstance = _a.render, readValueFromInstance = _a.readValueFromInstance, resetTransform = _a.resetTransform, restoreTransform = _a.restoreTransform, removeValueFromRenderState = _a.removeValueFromRenderState, sortNodePosition = _a.sortNodePosition, scrapeMotionValuesFromProps = _a.scrapeMotionValuesFromProps;\n    return function (_a, options) {\n        var parent = _a.parent, props = _a.props, presenceId = _a.presenceId, blockInitialAnimation = _a.blockInitialAnimation, visualState = _a.visualState;\n        if (options === void 0) { options = {}; }\n        var latestValues = visualState.latestValues, renderState = visualState.renderState;\n        /**\n         * The instance of the render-specific node that will be hydrated by the\n         * exposed React ref. So for example, this visual element can host a\n         * HTMLElement, plain object, or Three.js object. The functions provided\n         * in VisualElementConfig allow us to interface with this instance.\n         */\n        var instance;\n        /**\n         * Manages the subscriptions for a visual element's lifecycle, for instance\n         * onRender and onViewportBoxUpdate.\n         */\n        var lifecycles = createLifecycles();\n        /**\n         *\n         */\n        var projection = createProjectionState();\n        /**\n         * A reference to the nearest projecting parent. This is either\n         * undefined if we haven't looked for the nearest projecting parent,\n         * false if there is no parent performing layout projection, or a reference\n         * to the projecting parent.\n         */\n        var projectionParent;\n        /**\n         * This is a reference to the visual state of the \"lead\" visual element.\n         * Usually, this will be this visual element. But if it shares a layoutId\n         * with other visual elements, only one of them will be designated lead by\n         * AnimateSharedLayout. All the other visual elements will take on the visual\n         * appearance of the lead while they crossfade to it.\n         */\n        var leadProjection = projection;\n        var leadLatestValues = latestValues;\n        var unsubscribeFromLeadVisualElement;\n        /**\n         * The latest layout measurements and calculated projections. This\n         * is seperate from the target projection data in visualState as\n         * many visual elements might point to the same piece of visualState as\n         * a target, whereas they might each have different layouts and thus\n         * projection calculations needed to project into the same viewport box.\n         */\n        var layoutState = createLayoutState();\n        /**\n         *\n         */\n        var crossfader;\n        /**\n         * Keep track of whether the viewport box has been updated since the\n         * last time the layout projection was re-calculated.\n         */\n        var hasViewportBoxUpdated = false;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        var values = new Map();\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        var valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        var prevMotionValues = {};\n        /**\n         * x/y motion values that track the progress of initiated layout\n         * animations.\n         *\n         * TODO: Target for removal\n         */\n        var projectionTargetProgress;\n        /**\n         * When values are removed from all animation props we need to search\n         * for a fallback value to animate to. These values are tracked in baseTarget.\n         */\n        var baseTarget = __assign({}, latestValues);\n        // Internal methods ========================\n        /**\n         * On mount, this will be hydrated with a callback to disconnect\n         * this visual element from its parent on unmount.\n         */\n        var removeFromVariantTree;\n        /**\n         *\n         */\n        function render() {\n            if (!instance)\n                return;\n            if (element.isProjectionReady()) {\n                /**\n                 * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n                 * This is the final box that we will then project into by calculating a transform delta and\n                 * applying it to the corrected box.\n                 */\n                applyBoxTransforms(leadProjection.targetFinal, leadProjection.target, leadLatestValues);\n                /**\n                 * Update the delta between the corrected box and the final target box, after\n                 * user-set transforms are applied to it. This will be used by the renderer to\n                 * create a transform style that will reproject the element from its actual layout\n                 * into the desired bounding box.\n                 */\n                updateBoxDelta(layoutState.deltaFinal, layoutState.layoutCorrected, leadProjection.targetFinal, latestValues);\n            }\n            triggerBuild();\n            renderInstance(instance, renderState);\n        }\n        function triggerBuild() {\n            var valuesToRender = latestValues;\n            if (crossfader && crossfader.isActive()) {\n                var crossfadedValues = crossfader.getCrossfadeState(element);\n                if (crossfadedValues)\n                    valuesToRender = crossfadedValues;\n            }\n            build(element, renderState, valuesToRender, leadProjection, layoutState, options, props);\n        }\n        function update() {\n            lifecycles.notifyUpdate(latestValues);\n        }\n        function updateLayoutProjection() {\n            if (!element.isProjectionReady())\n                return;\n            var delta = layoutState.delta, treeScale = layoutState.treeScale;\n            var prevTreeScaleX = treeScale.x;\n            var prevTreeScaleY = treeScale.y;\n            var prevDeltaTransform = layoutState.deltaTransform;\n            updateLayoutDeltas(layoutState, leadProjection, element.path, latestValues);\n            hasViewportBoxUpdated &&\n                element.notifyViewportBoxUpdate(leadProjection.target, delta);\n            hasViewportBoxUpdated = false;\n            var deltaTransform = buildLayoutProjectionTransform(delta, treeScale);\n            if (deltaTransform !== prevDeltaTransform ||\n                // Also compare calculated treeScale, for values that rely on this only for scale correction\n                prevTreeScaleX !== treeScale.x ||\n                prevTreeScaleY !== treeScale.y) {\n                element.scheduleRender();\n            }\n            layoutState.deltaTransform = deltaTransform;\n        }\n        function updateTreeLayoutProjection() {\n            element.layoutTree.forEach(fireUpdateLayoutProjection);\n        }\n        /**\n         *\n         */\n        function bindToMotionValue(key, value) {\n            var removeOnChange = value.onChange(function (latestValue) {\n                latestValues[key] = latestValue;\n                props.onUpdate && sync.update(update, false, true);\n            });\n            var removeOnRenderRequest = value.onRenderRequest(element.scheduleRender);\n            valueSubscriptions.set(key, function () {\n                removeOnChange();\n                removeOnRenderRequest();\n            });\n        }\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        var initialMotionValues = scrapeMotionValuesFromProps(props);\n        for (var key in initialMotionValues) {\n            var value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        var isControllingVariants = checkIfControllingVariants(props);\n        var isVariantNode = checkIfVariantNode(props);\n        var element = __assign(__assign({ treeType: treeType, \n            /**\n             * This is a mirror of the internal instance prop, which keeps\n             * VisualElement type-compatible with React's RefObject.\n             */\n            current: null, \n            /**\n             * The depth of this visual element within the visual element tree.\n             */\n            depth: parent ? parent.depth + 1 : 0, parent: parent, children: new Set(), \n            /**\n             * An ancestor path back to the root visual element. This is used\n             * by layout projection to quickly recurse back up the tree.\n             */\n            path: parent ? __spreadArray(__spreadArray([], __read(parent.path)), [parent]) : [], layoutTree: parent ? parent.layoutTree : new FlatTree(), \n            /**\n             *\n             */\n            presenceId: presenceId,\n            projection: projection, \n            /**\n             * If this component is part of the variant tree, it should track\n             * any children that are also part of the tree. This is essentially\n             * a shadow tree to simplify logic around how to stagger over children.\n             */\n            variantChildren: isVariantNode ? new Set() : undefined, \n            /**\n             * Whether this instance is visible. This can be changed imperatively\n             * by AnimateSharedLayout, is analogous to CSS's visibility in that\n             * hidden elements should take up layout, and needs enacting by the configured\n             * render function.\n             */\n            isVisible: undefined, \n            /**\n             * Normally, if a component is controlled by a parent's variants, it can\n             * rely on that ancestor to trigger animations further down the tree.\n             * However, if a component is created after its parent is mounted, the parent\n             * won't trigger that mount animation so the child needs to.\n             *\n             * TODO: This might be better replaced with a method isParentMounted\n             */\n            manuallyAnimateOnMount: Boolean(parent === null || parent === void 0 ? void 0 : parent.isMounted()), \n            /**\n             * This can be set by AnimatePresence to force components that mount\n             * at the same time as it to mount as if they have initial={false} set.\n             */\n            blockInitialAnimation: blockInitialAnimation, \n            /**\n             * Determine whether this component has mounted yet. This is mostly used\n             * by variant children to determine whether they need to trigger their\n             * own animations on mount.\n             */\n            isMounted: function () { return Boolean(instance); }, mount: function (newInstance) {\n                instance = element.current = newInstance;\n                element.pointTo(element);\n                if (isVariantNode && parent && !isControllingVariants) {\n                    removeFromVariantTree = parent === null || parent === void 0 ? void 0 : parent.addVariantChild(element);\n                }\n                parent === null || parent === void 0 ? void 0 : parent.children.add(element);\n            },\n            /**\n             *\n             */\n            unmount: function () {\n                cancelSync.update(update);\n                cancelSync.render(render);\n                cancelSync.preRender(element.updateLayoutProjection);\n                valueSubscriptions.forEach(function (remove) { return remove(); });\n                element.stopLayoutAnimation();\n                element.layoutTree.remove(element);\n                removeFromVariantTree === null || removeFromVariantTree === void 0 ? void 0 : removeFromVariantTree();\n                parent === null || parent === void 0 ? void 0 : parent.children.delete(element);\n                unsubscribeFromLeadVisualElement === null || unsubscribeFromLeadVisualElement === void 0 ? void 0 : unsubscribeFromLeadVisualElement();\n                lifecycles.clearAllListeners();\n            },\n            /**\n             * Add a child visual element to our set of children.\n             */\n            addVariantChild: function (child) {\n                var _a;\n                var closestVariantNode = element.getClosestVariantNode();\n                if (closestVariantNode) {\n                    (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n                    return function () { return closestVariantNode.variantChildren.delete(child); };\n                }\n            },\n            sortNodePosition: function (other) {\n                /**\n                 * If these nodes aren't even of the same type we can't compare their depth.\n                 */\n                if (!sortNodePosition || treeType !== other.treeType)\n                    return 0;\n                return sortNodePosition(element.getInstance(), other.getInstance());\n            }, \n            /**\n             * Returns the closest variant node in the tree starting from\n             * this visual element.\n             */\n            getClosestVariantNode: function () {\n                return isVariantNode ? element : parent === null || parent === void 0 ? void 0 : parent.getClosestVariantNode();\n            }, \n            /**\n             * A method that schedules an update to layout projections throughout\n             * the tree. We inherit from the parent so there's only ever one\n             * job scheduled on the next frame - that of the root visual element.\n             */\n            scheduleUpdateLayoutProjection: parent\n                ? parent.scheduleUpdateLayoutProjection\n                : function () {\n                    return sync.preRender(element.updateTreeLayoutProjection, false, true);\n                }, \n            /**\n             * Expose the latest layoutId prop.\n             */\n            getLayoutId: function () { return props.layoutId; }, \n            /**\n             * Returns the current instance.\n             */\n            getInstance: function () { return instance; }, \n            /**\n             * Get/set the latest static values.\n             */\n            getStaticValue: function (key) { return latestValues[key]; }, setStaticValue: function (key, value) { return (latestValues[key] = value); }, \n            /**\n             * Returns the latest motion value state. Currently only used to take\n             * a snapshot of the visual element - perhaps this can return the whole\n             * visual state\n             */\n            getLatestValues: function () { return latestValues; }, \n            /**\n             * Set the visiblity of the visual element. If it's changed, schedule\n             * a render to reflect these changes.\n             */\n            setVisibility: function (visibility) {\n                if (element.isVisible === visibility)\n                    return;\n                element.isVisible = visibility;\n                element.scheduleRender();\n            },\n            /**\n             * Make a target animatable by Popmotion. For instance, if we're\n             * trying to animate width from 100px to 100vw we need to measure 100vw\n             * in pixels to determine what we really need to animate to. This is also\n             * pluggable to support Framer's custom value types like Color,\n             * and CSS variables.\n             */\n            makeTargetAnimatable: function (target, canMutate) {\n                if (canMutate === void 0) { canMutate = true; }\n                return makeTargetAnimatable(element, target, props, canMutate);\n            },\n            // Motion values ========================\n            /**\n             * Add a motion value and bind it to this visual element.\n             */\n            addValue: function (key, value) {\n                // Remove existing value if it exists\n                if (element.hasValue(key))\n                    element.removeValue(key);\n                values.set(key, value);\n                latestValues[key] = value.get();\n                bindToMotionValue(key, value);\n            },\n            /**\n             * Remove a motion value and unbind any active subscriptions.\n             */\n            removeValue: function (key) {\n                var _a;\n                values.delete(key);\n                (_a = valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n                valueSubscriptions.delete(key);\n                delete latestValues[key];\n                removeValueFromRenderState(key, renderState);\n            }, \n            /**\n             * Check whether we have a motion value for this key\n             */\n            hasValue: function (key) { return values.has(key); }, \n            /**\n             * Get a motion value for this key. If called with a default\n             * value, we'll create one if none exists.\n             */\n            getValue: function (key, defaultValue) {\n                var value = values.get(key);\n                if (value === undefined && defaultValue !== undefined) {\n                    value = motionValue(defaultValue);\n                    element.addValue(key, value);\n                }\n                return value;\n            }, \n            /**\n             * Iterate over our motion values.\n             */\n            forEachValue: function (callback) { return values.forEach(callback); }, \n            /**\n             * If we're trying to animate to a previously unencountered value,\n             * we need to check for it in our state and as a last resort read it\n             * directly from the instance (which might have performance implications).\n             */\n            readValue: function (key) { var _a; return (_a = latestValues[key]) !== null && _a !== void 0 ? _a : readValueFromInstance(instance, key, options); }, \n            /**\n             * Set the base target to later animate back to. This is currently\n             * only hydrated on creation and when we first read a value.\n             */\n            setBaseTarget: function (key, value) {\n                baseTarget[key] = value;\n            },\n            /**\n             * Find the base target for a value thats been removed from all animation\n             * props.\n             */\n            getBaseTarget: function (key) {\n                if (getBaseTarget) {\n                    var target = getBaseTarget(props, key);\n                    if (target !== undefined && !isMotionValue(target))\n                        return target;\n                }\n                return baseTarget[key];\n            } }, lifecycles), { \n            /**\n             * Build the renderer state based on the latest visual state.\n             */\n            build: function () {\n                triggerBuild();\n                return renderState;\n            },\n            /**\n             * Schedule a render on the next animation frame.\n             */\n            scheduleRender: function () {\n                sync.render(render, false, true);\n            }, \n            /**\n             * Synchronously fire render. It's prefered that we batch renders but\n             * in many circumstances, like layout measurement, we need to run this\n             * synchronously. However in those instances other measures should be taken\n             * to batch reads/writes.\n             */\n            syncRender: render, \n            /**\n             * Update the provided props. Ensure any newly-added motion values are\n             * added to our map, old ones removed, and listeners updated.\n             */\n            setProps: function (newProps) {\n                props = newProps;\n                lifecycles.updatePropListeners(newProps);\n                prevMotionValues = updateMotionValuesFromProps(element, scrapeMotionValuesFromProps(props), prevMotionValues);\n            }, getProps: function () { return props; }, \n            // Variants ==============================\n            /**\n             * Returns the variant definition with a given name.\n             */\n            getVariant: function (name) { var _a; return (_a = props.variants) === null || _a === void 0 ? void 0 : _a[name]; }, \n            /**\n             * Returns the defined default transition on this component.\n             */\n            getDefaultTransition: function () { return props.transition; }, \n            /**\n             * Used by child variant nodes to get the closest ancestor variant props.\n             */\n            getVariantContext: function (startAtParent) {\n                if (startAtParent === void 0) { startAtParent = false; }\n                if (startAtParent)\n                    return parent === null || parent === void 0 ? void 0 : parent.getVariantContext();\n                if (!isControllingVariants) {\n                    var context_1 = (parent === null || parent === void 0 ? void 0 : parent.getVariantContext()) || {};\n                    if (props.initial !== undefined) {\n                        context_1.initial = props.initial;\n                    }\n                    return context_1;\n                }\n                var context = {};\n                for (var i = 0; i < numVariantProps; i++) {\n                    var name_1 = variantProps[i];\n                    var prop = props[name_1];\n                    if (isVariantLabel(prop) || prop === false) {\n                        context[name_1] = prop;\n                    }\n                }\n                return context;\n            },\n            // Layout projection ==============================\n            /**\n             * Enable layout projection for this visual element. Won't actually\n             * occur until we also have hydrated layout measurements.\n             */\n            enableLayoutProjection: function () {\n                projection.isEnabled = true;\n                element.layoutTree.add(element);\n            },\n            /**\n             * Lock the projection target, for instance when dragging, so\n             * nothing else can try and animate it.\n             */\n            lockProjectionTarget: function () {\n                projection.isTargetLocked = true;\n            },\n            unlockProjectionTarget: function () {\n                element.stopLayoutAnimation();\n                projection.isTargetLocked = false;\n            }, getLayoutState: function () { return layoutState; }, setCrossfader: function (newCrossfader) {\n                crossfader = newCrossfader;\n            }, isProjectionReady: function () {\n                return projection.isEnabled &&\n                    projection.isHydrated &&\n                    layoutState.isHydrated;\n            }, \n            /**\n             * Start a layout animation on a given axis.\n             */\n            startLayoutAnimation: function (axis, transition, isRelative) {\n                if (isRelative === void 0) { isRelative = false; }\n                var progress = element.getProjectionAnimationProgress()[axis];\n                var _a = isRelative\n                    ? projection.relativeTarget[axis]\n                    : projection.target[axis], min = _a.min, max = _a.max;\n                var length = max - min;\n                progress.clearListeners();\n                progress.set(min);\n                progress.set(min); // Set twice to hard-reset velocity\n                progress.onChange(function (v) {\n                    element.setProjectionTargetAxis(axis, v, v + length, isRelative);\n                });\n                return element.animateMotionValue(axis, progress, 0, transition);\n            },\n            /**\n             * Stop layout animations.\n             */\n            stopLayoutAnimation: function () {\n                eachAxis(function (axis) {\n                    return element.getProjectionAnimationProgress()[axis].stop();\n                });\n            },\n            /**\n             * Measure the current viewport box with or without transforms.\n             * Only measures axis-aligned boxes, rotate and skew must be manually\n             * removed with a re-render to work.\n             */\n            measureViewportBox: function (withTransform) {\n                if (withTransform === void 0) { withTransform = true; }\n                var viewportBox = measureViewportBox(instance, options);\n                if (!withTransform)\n                    removeBoxTransforms(viewportBox, latestValues);\n                return viewportBox;\n            },\n            /**\n             * Get the motion values tracking the layout animations on each\n             * axis. Lazy init if not already created.\n             */\n            getProjectionAnimationProgress: function () {\n                projectionTargetProgress || (projectionTargetProgress = {\n                    x: motionValue(0),\n                    y: motionValue(0),\n                });\n                return projectionTargetProgress;\n            },\n            /**\n             * Update the projection of a single axis. Schedule an update to\n             * the tree layout projection.\n             */\n            setProjectionTargetAxis: function (axis, min, max, isRelative) {\n                if (isRelative === void 0) { isRelative = false; }\n                var target;\n                if (isRelative) {\n                    if (!projection.relativeTarget) {\n                        projection.relativeTarget = axisBox();\n                    }\n                    target = projection.relativeTarget[axis];\n                }\n                else {\n                    projection.relativeTarget = undefined;\n                    target = projection.target[axis];\n                }\n                projection.isHydrated = true;\n                target.min = min;\n                target.max = max;\n                // Flag that we want to fire the onViewportBoxUpdate event handler\n                hasViewportBoxUpdated = true;\n                lifecycles.notifySetAxisTarget();\n            },\n            /**\n             * Rebase the projection target on top of the provided viewport box\n             * or the measured layout. This ensures that non-animating elements\n             * don't fall out of sync differences in measurements vs projections\n             * after a page scroll or other relayout.\n             */\n            rebaseProjectionTarget: function (force, box) {\n                if (box === void 0) { box = layoutState.layout; }\n                var _a = element.getProjectionAnimationProgress(), x = _a.x, y = _a.y;\n                var shouldRebase = !projection.relativeTarget &&\n                    !projection.isTargetLocked &&\n                    !x.isAnimating() &&\n                    !y.isAnimating();\n                if (force || shouldRebase) {\n                    eachAxis(function (axis) {\n                        var _a = box[axis], min = _a.min, max = _a.max;\n                        element.setProjectionTargetAxis(axis, min, max);\n                    });\n                }\n            },\n            /**\n             * Notify the visual element that its layout is up-to-date.\n             * Currently Animate.tsx uses this to check whether a layout animation\n             * needs to be performed.\n             */\n            notifyLayoutReady: function (config) {\n                setCurrentViewportBox(element);\n                element.notifyLayoutUpdate(layoutState.layout, element.prevViewportBox || layoutState.layout, config);\n            }, \n            /**\n             * Temporarily reset the transform of the instance.\n             */\n            resetTransform: function () { return resetTransform(element, instance, props); }, restoreTransform: function () { return restoreTransform(instance, renderState); }, updateLayoutProjection: updateLayoutProjection,\n            updateTreeLayoutProjection: function () {\n                element.layoutTree.forEach(fireResolveRelativeTargetBox);\n                /**\n                 * Schedule the projection updates at the end of the current preRender\n                 * step. This will ensure that all layout trees will first resolve\n                 * relative projection boxes into viewport boxes, and *then*\n                 * update projections.\n                 */\n                sync.preRender(updateTreeLayoutProjection, false, true);\n                // sync.postRender(() => element.scheduleUpdateLayoutProjection())\n            },\n            getProjectionParent: function () {\n                if (projectionParent === undefined) {\n                    var foundParent = false;\n                    // Search backwards through the tree path\n                    for (var i = element.path.length - 1; i >= 0; i--) {\n                        var ancestor = element.path[i];\n                        if (ancestor.projection.isEnabled) {\n                            foundParent = ancestor;\n                            break;\n                        }\n                    }\n                    projectionParent = foundParent;\n                }\n                return projectionParent;\n            },\n            resolveRelativeTargetBox: function () {\n                var relativeParent = element.getProjectionParent();\n                if (!projection.relativeTarget || !relativeParent)\n                    return;\n                calcRelativeBox(projection, relativeParent.projection);\n                if (isDraggable(relativeParent)) {\n                    var target = projection.target;\n                    applyBoxTransforms(target, target, relativeParent.getLatestValues());\n                }\n            },\n            shouldResetTransform: function () {\n                return Boolean(props._layoutResetTransform);\n            },\n            /**\n             *\n             */\n            pointTo: function (newLead) {\n                leadProjection = newLead.projection;\n                leadLatestValues = newLead.getLatestValues();\n                /**\n                 * Subscribe to lead component's layout animations\n                 */\n                unsubscribeFromLeadVisualElement === null || unsubscribeFromLeadVisualElement === void 0 ? void 0 : unsubscribeFromLeadVisualElement();\n                unsubscribeFromLeadVisualElement = pipe(newLead.onSetAxisTarget(element.scheduleUpdateLayoutProjection), newLead.onLayoutAnimationComplete(function () {\n                    var _a;\n                    if (element.isPresent) {\n                        element.presence = Presence.Present;\n                    }\n                    else {\n                        (_a = element.layoutSafeToRemove) === null || _a === void 0 ? void 0 : _a.call(element);\n                    }\n                }));\n            }, \n            // TODO: Clean this up\n            isPresent: true, presence: Presence.Entering });\n        return element;\n    };\n};\nfunction fireResolveRelativeTargetBox(child) {\n    child.resolveRelativeTargetBox();\n}\nfunction fireUpdateLayoutProjection(child) {\n    child.updateLayoutProjection();\n}\nvar variantProps = __spreadArray([\"initial\"], __read(variantPriorityOrder));\nvar numVariantProps = variantProps.length;\n\nexport { visualElement };\n","import { motionValue } from '../../value/index.js';\nimport { isMotionValue } from '../../value/utils/is-motion-value.js';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    var _a;\n    for (var key in next) {\n        var nextValue = next[key];\n        var prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping to a new motion value, create a new motion value\n             * from that\n             */\n            element.addValue(key, motionValue(nextValue));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                var existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                element.addValue(key, motionValue((_a = element.getStaticValue(key)) !== null && _a !== void 0 ? _a : nextValue));\n            }\n        }\n    }\n    // Handle removed values\n    for (var key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { calcRelativeOffset } from '../../../motion/features/layout/utils.js';\nimport { eachAxis } from '../../../utils/each-axis.js';\n\nfunction setCurrentViewportBox(visualElement) {\n    var projectionParent = visualElement.getProjectionParent();\n    if (!projectionParent) {\n        visualElement.rebaseProjectionTarget();\n        return;\n    }\n    var relativeOffset = calcRelativeOffset(projectionParent.getLayoutState().layout, visualElement.getLayoutState().layout);\n    eachAxis(function (axis) {\n        visualElement.setProjectionTargetAxis(axis, relativeOffset[axis].min, relativeOffset[axis].max, true);\n    });\n}\n\nexport { setCurrentViewportBox };\n","import { __assign, __read } from 'tslib';\nimport { number, px } from 'style-value-types';\nimport { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.js';\nimport { invariant } from 'hey-listen';\nimport { transformProps } from '../../html/utils/transform.js';\nimport { findDimensionValueType } from '../value-types/dimensions.js';\n\nvar positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nvar isPositionalKey = function (key) { return positionalKeys.has(key); };\nvar hasPositionalKey = function (target) {\n    return Object.keys(target).some(isPositionalKey);\n};\nvar setAndResetVelocity = function (value, to) {\n    // Looks odd but setting it twice doesn't render, it'll just\n    // set both prev and current to the latest value\n    value.set(to, false);\n    value.set(to);\n};\nvar isNumOrPxType = function (v) {\n    return v === number || v === px;\n};\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nvar getPosFromMatrix = function (matrix, pos) {\n    return parseFloat(matrix.split(\", \")[pos]);\n};\nvar getTranslateFromMatrix = function (pos2, pos3) { return function (_bbox, _a) {\n    var transform = _a.transform;\n    if (transform === \"none\" || !transform)\n        return 0;\n    var matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        var matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n}; };\nvar transformKeys = new Set([\"x\", \"y\", \"z\"]);\nvar nonTranslationalTransformKeys = transformProps.filter(function (key) { return !transformKeys.has(key); });\nfunction removeNonTranslationalTransform(visualElement) {\n    var removedTransforms = [];\n    nonTranslationalTransformKeys.forEach(function (key) {\n        var value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.syncRender();\n    return removedTransforms;\n}\nvar positionalValues = {\n    // Dimensions\n    width: function (_a) {\n        var x = _a.x;\n        return x.max - x.min;\n    },\n    height: function (_a) {\n        var y = _a.y;\n        return y.max - y.min;\n    },\n    top: function (_bbox, _a) {\n        var top = _a.top;\n        return parseFloat(top);\n    },\n    left: function (_bbox, _a) {\n        var left = _a.left;\n        return parseFloat(left);\n    },\n    bottom: function (_a, _b) {\n        var y = _a.y;\n        var top = _b.top;\n        return parseFloat(top) + (y.max - y.min);\n    },\n    right: function (_a, _b) {\n        var x = _a.x;\n        var left = _b.left;\n        return parseFloat(left) + (x.max - x.min);\n    },\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nvar convertChangedValueTypes = function (target, visualElement, changedKeys) {\n    var originBbox = visualElement.measureViewportBox();\n    var element = visualElement.getInstance();\n    var elementComputedStyle = getComputedStyle(element);\n    var display = elementComputedStyle.display, top = elementComputedStyle.top, left = elementComputedStyle.left, bottom = elementComputedStyle.bottom, right = elementComputedStyle.right, transform = elementComputedStyle.transform;\n    var originComputedStyle = { top: top, left: left, bottom: bottom, right: right, transform: transform };\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.syncRender();\n    var targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach(function (key) {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        var value = visualElement.getValue(key);\n        setAndResetVelocity(value, positionalValues[key](originBbox, originComputedStyle));\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nvar checkAndConvertChangedValueTypes = function (visualElement, target, origin, transitionEnd) {\n    if (origin === void 0) { origin = {}; }\n    if (transitionEnd === void 0) { transitionEnd = {}; }\n    target = __assign({}, target);\n    transitionEnd = __assign({}, transitionEnd);\n    var targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    var removedTransformValues = [];\n    var hasAttemptedToRemoveTransformValues = false;\n    var changedValueTypeKeys = [];\n    targetPositionalKeys.forEach(function (key) {\n        var value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        var from = origin[key];\n        var to = target[key];\n        var fromType = findDimensionValueType(from);\n        var toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            var numKeyframes = to.length;\n            for (var i = to[0] === null ? 1 : 0; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                var current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues = removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                setAndResetVelocity(value, to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        var convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(function (_a) {\n                var _b = __read(_a, 2), key = _b[0], value = _b[1];\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.syncRender();\n        return { target: convertedTarget, transitionEnd: transitionEnd };\n    }\n    else {\n        return { target: target, transitionEnd: transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target: target, transitionEnd: transitionEnd };\n}\n\nexport { BoundingBoxDimension, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.js';\nimport { unitConversion } from './unit-conversion.js';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nvar parseDomVariant = function (visualElement, target, origin, transitionEnd) {\n    var resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","import { __rest, __assign } from 'tslib';\nimport { visualElement } from '../index.js';\nimport { getOrigin, checkTargetForNewValues } from '../utils/setters.js';\nimport { getBoundingBox } from '../dom/projection/measure.js';\nimport { buildHTMLStyles } from './utils/build-styles.js';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.js';\nimport { parseDomVariant } from '../dom/utils/parse-dom-variant.js';\nimport { isTransformProp } from './utils/transform.js';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.js';\nimport { renderHTML } from './utils/render.js';\nimport { getDefaultValueType } from '../dom/value-types/defaults.js';\nimport { buildLayoutProjectionTransformOrigin, buildLayoutProjectionTransform } from './utils/build-projection-transform.js';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nvar htmlConfig = {\n    treeType: \"dom\",\n    readValueFromInstance: function (domElement, key) {\n        if (isTransformProp(key)) {\n            var defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            var computedStyle = getComputedStyle(domElement);\n            return ((isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0);\n        }\n    },\n    sortNodePosition: function (a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    },\n    getBaseTarget: function (props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    },\n    measureViewportBox: function (element, _a) {\n        var transformPagePoint = _a.transformPagePoint;\n        return getBoundingBox(element, transformPagePoint);\n    },\n    /**\n     * Reset the transform on the current Element. This is called as part\n     * of a batched process across the entire layout tree. To remove this write\n     * cycle it'd be interesting to see if it's possible to \"undo\" all the current\n     * layout transforms up the tree in the same way this.getBoundingBoxWithoutTransforms\n     * works\n     */\n    resetTransform: function (element, domElement, props) {\n        var transformTemplate = props.transformTemplate;\n        domElement.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        // Ensure that whatever happens next, we restore our transform on the next frame\n        element.scheduleRender();\n    },\n    restoreTransform: function (instance, mutableState) {\n        instance.style.transform = mutableState.style.transform;\n    },\n    removeValueFromRenderState: function (key, _a) {\n        var vars = _a.vars, style = _a.style;\n        delete vars[key];\n        delete style[key];\n    },\n    /**\n     * Ensure that HTML and Framer-specific value types like `px`->`%` and `Color`\n     * can be animated by Motion.\n     */\n    makeTargetAnimatable: function (element, _a, _b, isMounted) {\n        var transformValues = _b.transformValues;\n        if (isMounted === void 0) { isMounted = true; }\n        var transition = _a.transition, transitionEnd = _a.transitionEnd, target = __rest(_a, [\"transition\", \"transitionEnd\"]);\n        var origin = getOrigin(target, transition || {}, element);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(element, target, origin);\n            var parsed = parseDomVariant(element, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return __assign({ transition: transition,\n            transitionEnd: transitionEnd }, target);\n    },\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n    build: function (element, renderState, latestValues, projection, layoutState, options, props) {\n        if (element.isVisible !== undefined) {\n            renderState.style.visibility = element.isVisible\n                ? \"visible\"\n                : \"hidden\";\n        }\n        var isProjectionTranform = projection.isEnabled && layoutState.isHydrated;\n        buildHTMLStyles(renderState, latestValues, projection, layoutState, options, props.transformTemplate, isProjectionTranform ? buildLayoutProjectionTransform : undefined, isProjectionTranform\n            ? buildLayoutProjectionTransformOrigin\n            : undefined);\n    },\n    render: renderHTML,\n};\nvar htmlVisualElement = visualElement(htmlConfig);\n\nexport { getComputedStyle, htmlConfig, htmlVisualElement };\n","import { __assign } from 'tslib';\nimport { visualElement } from '../index.js';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.js';\nimport { htmlConfig } from '../html/visual-element.js';\nimport { buildSVGAttrs } from './utils/build-attrs.js';\nimport { camelToDash } from '../dom/utils/camel-to-dash.js';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.js';\nimport { isTransformProp } from '../html/utils/transform.js';\nimport { renderSVG } from './utils/render.js';\nimport { getDefaultValueType } from '../dom/value-types/defaults.js';\nimport { buildLayoutProjectionTransformOrigin, buildLayoutProjectionTransform } from '../html/utils/build-projection-transform.js';\n\nvar svgVisualElement = visualElement(__assign(__assign({}, htmlConfig), { getBaseTarget: function (props, key) {\n        return props[key];\n    },\n    readValueFromInstance: function (domElement, key) {\n        var _a;\n        if (isTransformProp(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return domElement.getAttribute(key);\n    },\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n    build: function (_element, renderState, latestValues, projection, layoutState, options, props) {\n        var isProjectionTranform = projection.isEnabled && layoutState.isHydrated;\n        buildSVGAttrs(renderState, latestValues, projection, layoutState, options, props.transformTemplate, isProjectionTranform ? buildLayoutProjectionTransform : undefined, isProjectionTranform\n            ? buildLayoutProjectionTransformOrigin\n            : undefined);\n    }, render: renderSVG }));\n\nexport { svgVisualElement };\n","import { __assign } from 'tslib';\nimport { animations } from '../../motion/features/animations.js';\nimport { gestureAnimations } from '../../motion/features/gestures.js';\nimport { createDomVisualElement } from './create-visual-element.js';\n\n/**\n * @public\n */\nvar domAnimation = __assign(__assign({ renderer: createDomVisualElement }, animations), gestureAnimations);\n\nexport { domAnimation };\n","import { htmlVisualElement } from '../html/visual-element.js';\nimport { svgVisualElement } from '../svg/visual-element.js';\nimport { isSVGComponent } from './utils/is-svg-component.js';\n\nvar createDomVisualElement = function (Component, options) {\n    return isSVGComponent(Component)\n        ? svgVisualElement(options, { enableHardwareAcceleration: false })\n        : htmlVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { __assign } from 'tslib';\nimport { drag } from '../../motion/features/drag.js';\nimport { layoutAnimations } from '../../motion/features/layout/index.js';\nimport { domAnimation } from './features-animation.js';\n\n/**\n * @public\n */\nvar domMax = __assign(__assign(__assign({}, domAnimation), drag), layoutAnimations);\n\nexport { domMax };\n"],"names":["isMouseEvent","event","PointerEvent","pointerType","MouseEvent","isTouchEvent","touches","defaultPagePoint","pageX","pageY","pointFromTouch","e","pointType","point","changedTouches","x","y","pointFromMouse","extractEventInfo","wrapHandler","handler","shouldFilterPrimaryPointer","eventHandler","listener","button","secondsToMilliseconds","seconds","addDomEvent","target","eventName","options","addEventListener","removeEventListener","useDomEvent","ref","useEffect","element","current","mouseEventNames","pointerdown","pointermove","pointerup","pointercancel","pointerover","pointerout","pointerenter","pointerleave","touchEventNames","getPointerEventName","name","isBrowser","window","onpointerdown","ontouchstart","onmousedown","addPointerEvent","usePointerEvent","isPoint","hasOwnProperty","isPoint3D","isNum","v","distance1D","a","b","Math","abs","distance","xDelta","yDelta","zDelta","z","sqrt","pow","combineFunctions","pipe","transformers","_i","arguments","length","reduce","PanSession","handlers","_a","_this","this","transformPagePoint","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","offset","timestamp","getFrameData","push","__assign","onStart","onMove","handlePointerMove","transformPoint","buttons","handlePointerUp","sync","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","prototype","updateHandlers","cancelSync","subtractPoint","delta","lastDevicePoint","startDevicePoint","velocity","getVelocity","timeDelta","i","timestampedPoint","lastPoint","time","currentVelocity","Infinity","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal_1","openVertical_1","isDragActive","openGestureLock","eachAxis","mix","from","to","progress","applyConstraints","elastic","min","max","undefined","calcRelativeAxisConstraints","axis","calcViewportAxisConstraints","layoutAxis","constraintsAxis","__read","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","getBoundingBox","box","getBoundingClientRect","convertBoundingBoxToAxisBox","transformBoundingBox","clamp","value","toFromDifference","isNear","maxDistance","calcLength","calcOrigin","source","origin","sourceLength","targetLength","updateAxisDelta","originPoint","scale","translate","updateBoxDelta","defaultOrigin","originX","originY","calcRelativeAxis","relative","parent","safeMin","findSpring","envelope","derivative","_b","duration","_c","bounce","_d","_e","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","c","exp","d","f","g","initialGuess","result","approximateRoot","isNaN","stiffness","damping","durationKeys","physicsKeys","isSpringType","keys","some","key","spring","restSpeed","restDelta","__rest","state","done","springOptions","isResolvedFromDuration","derived","getSpringOptions","resolveSpring","zero","resolveVelocity","createSpring","initialVelocity","initialDelta","undampedAngularFreq","angularFreq_1","t","sin","cos","dampedAngularFreq_1","freqForT","sinh","cosh","next","isBelowVelocityThreshold","isBelowDisplacementThreshold","flipTarget","needsInterpolation","_t","isColorString","type","testProp","Boolean","isString","singleColorRegex","startsWith","Object","call","splitColor","aName","bName","cName","match","floatRegex","alpha","parseFloat","clampRgbUnit","rgbUnit","number","transform","round","rgba","test","parse","red","green","blue","alpha$1","sanitize","hex","r","substr","parseInt","hsla","hue","saturation","lightness","percent","mixLinearColor","fromExpo","toExpo","colorTypes","getColorType","find","notAnimatable","color","mixColor","fromColorType","toColorType","fromColor","toColor","blended","mixFunc","colorToken","numberToken","analyse","values","numColors","colors","colorRegex","replace","apply","map","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","getAnimatableNone","parsed","transformer","getMixer","mixComplex","mixArray","__spreadArray","blendValue","fromThis","mixObject","numNumbers","numRGB","numHSL","template","originStats","targetStats","mixNumber","p","createMixers","ease","customMixer","mixers","mixerFactory","Array","isArray","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","concat","reverse","interpolator","fastInterpolate","lastInputIndex","mixerIndex","foundMixerIndex","progressInRange","slowInterpolate","power","reverseEasing","easing","mirrorEasing","createBackIn","linear","easeIn","easeOut","easeInOut","circIn","acos","circOut","circInOut","backIn","backOut","backInOut","anticipate","backEasing","createAnticipate","bounceOut","p2","bounceIn","defaultEasing","splice","keyframes","times","o","convertOffsetToTimes","_value","defaultOffset","createInterpolator","types","decay","timeConstant","_f","modifyTarget","amplitude","ideal","loopElapsed","elapsed","delay","framesync","update","passTimestamp","start","stop","animate","driverControls","latest","interpolateFromNumber","autoplay","driver","_g","repeat","repeatMax","_h","repeatType","_j","repeatDelay","onPlay","onStop","onComplete","onRepeat","onUpdate","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","config","Set","has","detectAnimationFromOptions","animation","reverseElapsed","hasRepeatDelayElapsed","velocityPerSecond","frameDuration","a1","a2","calcBezier","getSlope","kSampleStepSize","cubicBezier","mX1","mY1","mX2","mY2","sampleValues","Float32Array","getTForX","aX","intervalStart","currentSample","kSplineTableSize","guessForT","initialSlope","aGuessT","currentSlope","newtonRaphsonIterate","aA","aB","currentX","currentT","binarySubdivide","easingLookup","bounceInOut","easingDefinitionToFunction","definition","isAnimatable","underDampedSpring","criticallyDampedSpring","linearTween","defaultTransitions","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","opacity","backgroundColor","default","maxDefaults","applyDefaultFilter","slice","split","unit","defaultValue","functionRegex","filter","functions","join","defaultValueTypes","numberValueTypes","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","AnimationType","convertTransitionToAnimationOptions","yoyo","flip","loop","transition","isEasingArray","getPopmotionAnimationOptions","hydrateKeyframes","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","valueKey","transitionFactory","isKeyframesTarget","getDefaultTransition","getAnimation","valueTransition","getValueTransition","get","isTargetAnimatable","isZero","getZeroUnit","isOriginAnimatable","set","currentAnimation","bounceStiffness","bounceDamping","isOutOfBounds","boundaryNearest","startAnimation","startSpring","prev_1","current_1","boundary_1","heading_1","inertia","indexOf","potentialUnitType","delayTimer","controls","getDelayFromTransition","setTimeout","clearTimeout","calcRelativeOffsetAxis","child","calcRelativeOffset","checkIfParentHasChanged","prev","prevId","getLayoutId","nextId","isDraggable","visualElement","getProps","_dragX","resetAxis","originAxis","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","applyAxisTransforms","final","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","applyBoxTransforms","finalBox","removePointDelta","removeAxisTransforms","removeAxisDelta","removeBoxTransforms","lastPointerEvent","elementDragControls","WeakMap","VisualElementDragControls","isDragging","currentDirection","constraints","axisBox","props","hasMutatedConstraints","cursorProgress","openGlobalLock","panSession","enableLayoutProjection","originEvent","snapToCursor","stopMotion","initialPoint","getViewportPointFromEvent","cancelLayout","batchLayout","read","write","ancestors","collectProjectingAncestors","children","collectProjectingChildren","tree","hasManuallySetCursorOrigin","isLayoutDrag","lockProjectionTarget","forEach","resetTransform","updateLayoutMeasurement","restoreTransform","getAxisMotionValue","isExternalDrag","rebaseProjectionTarget","measureViewportBox","scheduleUpdateLayoutProjection","projection","axisValue","flushSync","resolveDragConstraints","dragPropagation","flushLayout","onDragStart","animationState","setActive","Drag","dragDirectionLock","lockThreshold","direction","getCurrentDirection","onDirectionLock","updateAxis","onDrag","dragConstraints","layout","getLayoutState","layoutCorrected","isRefObject","resolveRefConstraints","layoutBox","top","left","bottom","right","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","measuredConstraints","calcViewportConstraints","userConstraints","convertAxisBoxToBoundingBox","cancelDrag","unlockProjectionTarget","animateDragEnd","onDragEnd","shouldDrag","length_1","center","includes","updateAxisMotionValue","updateVisualElementAxis","nextValue","axisLayout","axisLength","axisProgress","calcConstrainedMinPoint","setProjectionTargetAxis","setProps","dragMomentum","remainingProps","layoutId","dragKey","toUpperCase","getValue","_dragY","dragTransition","isRelative","projectionParent","getProjectionParent","getLatestValues","convertToRelativeProjection","relativeConstraints_1","targetFinal","momentumAnimations","startAxisValueAnimation","startLayoutAnimation","Promise","all","then","onDragTransitionEnd","stopLayoutAnimation","currentValue","boxProgress","updateConstraints","calcPositionFromProgress","onReady","mount","stopPointerListener","getInstance","dragListener","stopResizeListener","stopLayoutUpdateListener","onLayoutUpdate","prevDragCursor","makeRenderlessComponent","hook","pan","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","useRef","useContext","MotionConfigContext","useUnmountEffect","groupDragControls","dragControls","useConstant","subscribe","isCSSVariable","cssVariableRegex","getVariableValue","depth","exec","parseCSSVariable","token","fallback","resolved","getComputedStyle","getPropertyValue","trim","pixelsToPercent","pixels","varToken","borderCorrectionDefinition","process","_layoutState","px","defaultScaleCorrectors","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","treeScale","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","i_1","cssVariable","Animate","_super","frameTarget","currentAnimationTarget","isAnimating","stopAxisAnimation","isAnimatingTree","originBox","targetBox","visibilityAction","shouldStackAnimate","prevParent","safeToRemove","prevParentViewportBox","prevViewportBox","parentLayout","isProvidedCorrectDataForRelativeSharedLayout","boxHasMoved","hasMoved","animations","isTargetLocked","animateAxis","setVisibility","VisibilityAction","syncRender","notifyLayoutAnimationComplete","__extends","componentDidMount","animateMotionValue","unsubLayoutReady","layoutSafeToRemove","addScaleCorrection","componentWillUnmount","axisIsEqual","layoutProgress","getProjectionAnimationProgress","clearListeners","frame","tweenAxis","unsubscribeProgress","onChange","layoutTransition","defaultLayoutTransition","render","React","isZeroBox","zeroAxis","Measure","syncLayout","framerSyncLayout","isSharedLayout","register","onUnmount","remove","getSnapshotBeforeUpdate","syncUpdate","snapshotViewportBox","add","componentDidUpdate","flush","React__default","layoutAnimations","measureLayout","SharedLayoutContext","FramerTreeLayoutContext","layoutAnimation","usePresence","shallowCompare","prevLength","addUniqueItem","arr","item","removeItem","index","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","clear","MotionValue","init","lastUpdated","updateSubscribers","velocityUpdateSubscribers","renderSubscribers","canTrackVelocity","updateAndNotify","scheduleVelocityCheck","velocityCheck","hasAnimated","subscription","onRenderRequest","attach","passiveEffect","getPrevious","resolve","stopAnimation","clearAnimation","destroy","motionValue","testValueType","dimensionValueTypes","degrees","vw","vh","findDimensionValueType","valueTypes","findValueType","setMotionValue","hasValue","addValue","setTarget","resolveVariant","makeTargetAnimatable","transitionEnd","resolveFinalValueInKeyframes","getOriginFromTransition","animateVariant","variant","custom","transitionOverride","animateTarget","getChildAnimations","variantChildren","size","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","notifyAnimationComplete","animateChildren","first","last","animationTypeState","getState","valueTarget","shouldBlockAnimation","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","variantPriorityOrder","Hover","Tap","Focus","Exit","reversePriorityOrder","numAnimationTypes","animateList","notifyAnimationStart","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","createState","allAnimatedKeys","isInitialRender","buildResolvedTypeValues","acc","animateChanges","changedActiveType","context","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","_loop_1","typeState","prop","propIsVariant","isVariantLabel","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","isAnimationControls","shouldAnimateType","isVariantLabels","variantsHaveChanged","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","delete","blockInitialAnimation","fallbackAnimation_1","fallbackTarget","getBaseTarget","shouldAnimate","initial","isAnimated","setAnimateFunction","makeAnimator","exit","isPresent","onExitComplete","presenceContext","PresenceContext","createHoverEvent","callback","isNodeOrChild","parentElement","gestureAnimations","tap","onTap","onTapStart","onTapCancel","whileTap","hasPressListeners","isPressing","cancelPointerEndListeners","removePointerEndListener","checkPointerEnd","onPointerUp","onPointerCancel","focus","whileFocus","hover","onHoverStart","onHoverEnd","whileHover","createLayoutState","isHydrated","deltaFinal","deltaTransform","zeroLayout","buildLayoutProjectionTransform","latestTransform","identityProjection","buildLayoutProjectionTransformOrigin","names","updateLayoutDeltas","treePath","transformOrigin","treeLength","node","applyTreeDeltas","FlatTree","isDirty","compareByDepth","treeType","build","renderInstance","readValueFromInstance","removeValueFromRenderState","scrapeMotionValuesFromProps","presenceId","visualState","instance","unsubscribeFromLeadVisualElement","crossfader","projectionTargetProgress","removeFromVariantTree","latestValues","renderState","lifecycles","managers","propSubscriptions","clearAllListeners","manager","updatePropListeners","on","propListener","args","createLifecycles","isEnabled","leadProjection","leadLatestValues","layoutState","hasViewportBoxUpdated","Map","valueSubscriptions","prevMotionValues","baseTarget","isProjectionReady","triggerBuild","valuesToRender","crossfadedValues","getCrossfadeState","notifyUpdate","updateTreeLayoutProjection","layoutTree","fireUpdateLayoutProjection","initialMotionValues","isMotionValue","isControllingVariants","checkIfControllingVariants","isVariantNode","checkIfVariantNode","path","isVisible","isMounted","newInstance","pointTo","addVariantChild","unmount","updateLayoutProjection","closestVariantNode","getClosestVariantNode","other","getStaticValue","setStaticValue","visibility","scheduleRender","canMutate","removeValue","removeOnChange","latestValue","removeOnRenderRequest","bindToMotionValue","forEachValue","readValue","setBaseTarget","newProps","prevValue","existingValue","updateMotionValuesFromProps","getVariant","variants","startAtParent","context_1","numVariantProps","name_1","variantProps","setCrossfader","newCrossfader","relativeTarget","withTransform","viewportBox","notifySetAxisTarget","force","shouldRebase","notifyLayoutReady","relativeOffset","setCurrentViewportBox","notifyLayoutUpdate","prevTreeScaleX","prevTreeScaleY","prevDeltaTransform","notifyViewportBoxUpdate","fireResolveRelativeTargetBox","foundParent","ancestor","resolveRelativeTargetBox","relativeParent","parentProjection","calcRelativeBox","shouldResetTransform","_layoutResetTransform","newLead","onSetAxisTarget","onLayoutAnimationComplete","presence","Presence","BoundingBoxDimension","positionalKeys","isPositionalKey","setAndResetVelocity","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","transformProps","positionalValues","width","height","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","removedTransforms","removeNonTranslationalTransform","convertedTarget","changedKeys","originBbox","elementComputedStyle","display","originComputedStyle","targetBbox","convertChangedValueTypes","unitConversion","hasPositionalKey","parseDomVariant","HTMLElement","resolveCSSVariables","htmlConfig","domElement","isTransformProp","defaultType","computedStyle","compareDocumentPosition","style","transformTemplate","mutableState","vars","transformValues","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","isProjectionTranform","buildHTMLStyles","renderHTML","htmlVisualElement","svgVisualElement","camelCaseAttributes","camelToDash","getAttribute","_element","buildSVGAttrs","renderSVG","domAnimation","renderer","Component","isSVGComponent","enableHardwareAcceleration","domMax"],"sourceRoot":""}