{"version":3,"file":"static/js/541.7957d14e.chunk.js","mappings":"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","sources":["pages/auth/Register.js"],"sourcesContent":["import { useState } from \"react\";\nimport * as Yup from \"yup\";\n\nimport { capitalCase } from \"change-case\";\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\nimport { styled } from \"@mui/material/styles\";\nimport {\n  Box,\n  Card,\n  Link,\n  Container,\n  Typography,\n  Tooltip,\n  Stack,\n  IconButton,\n  InputAdornment,\n  Alert,\n} from \"@mui/material\";\nimport useAuth from \"../../hooks/useAuth\";\nimport useResponsive from \"../../hooks/useResponsive\";\nimport Page from \"../../components/Page\";\n// import Logo from \"../../components/Logo\";\nimport Image from \"../../components/Image\";\nimport { LoadingButton } from \"@mui/lab\";\nimport useIsMountedRef from \"../../hooks/useIsMountedRef\";\nimport Iconify from \"../../components/Iconify\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\n\nimport { FormProvider, RHFTextField } from \"../../components/hook-form\";\n\nconst RootStyle = styled(\"div\")(({ theme }) => ({\n  [theme.breakpoints.up(\"md\")]: {\n    display: \"flex\",\n  },\n}));\n\nconst HeaderStyle = styled(\"header\")(({ theme }) => ({\n  top: 0,\n  zIndex: 9,\n  lineHeight: 0,\n  width: \"100%\",\n  display: \"flex\",\n  alignItems: \"center\",\n  position: \"absolute\",\n  padding: theme.spacing(3),\n  justifyContent: \"space-between\",\n  [theme.breakpoints.up(\"md\")]: {\n    alignItems: \"flex-start\",\n    padding: theme.spacing(7, 5, 0, 7),\n  },\n}));\n\nconst SectionStyle = styled(Card)(({ theme }) => ({\n  width: \"100%\",\n  maxWidth: 464,\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  margin: theme.spacing(2, 0, 2, 2),\n}));\n\nconst ContentStyle = styled(\"div\")(({ theme }) => ({\n  maxWidth: 480,\n  margin: \"auto\",\n  display: \"flex\",\n  minHeight: \"100vh\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  padding: theme.spacing(12, 0),\n}));\n\nexport default function Register() {\n  const { register, method } = useAuth();\n  const navigate = useNavigate();\n\n  const mdUp = useResponsive(\"up\", \"md\");\n\n  const isMountedRef = useIsMountedRef();\n\n  const [showPassword, setShowPassword] = useState(false);\n\n  const RegisterSchema = Yup.object().shape({\n    firstName: Yup.string().required(\"First name is required\"),\n    lastName: Yup.string().required(\"Last name is required\"),\n    mobile: Yup.string().required(\"Mobile phone number is required\"),\n    email: Yup.string().email(\"Email must be a valid email address\").required(\"Email is required\"),\n    password: Yup.string().required(\"Password is required\"),\n  });\n\n  const defaultValues = {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    mobile: \"\",\n    password: \"\",\n  };\n\n  const methods = useForm({\n    resolver: yupResolver(RegisterSchema),\n    defaultValues,\n  });\n\n  const {\n    reset,\n\n    setError,\n    handleSubmit,\n    formState: { errors, isSubmitting },\n  } = methods;\n\n  const onSubmit = async (data) => {\n    try {\n      await register(data);\n      navigate(\"/home\");\n    } catch (error) {\n      console.error(error);\n      reset();\n      if (isMountedRef.current) {\n        setError(\"afterSubmit\", error.response.data);\n      }\n    }\n  };\n\n  return (\n    <Page title=\"Register\">\n      <RootStyle>\n        <HeaderStyle>{/* <Logo /> */}</HeaderStyle>\n\n        {mdUp && (\n          <SectionStyle>\n            <Typography variant=\"h3\" sx={{ px: 5, mt: 10, mb: 5 }}>\n              Get started with MyPortal today.\n            </Typography>\n            <Image alt=\"register\" src={require(\"../../assets/images/illustration_register.png\")} />\n          </SectionStyle>\n        )}\n\n        <Container>\n          <ContentStyle>\n            <Box sx={{ mb: 5, display: \"flex\", alignItems: \"center\" }}>\n              <Box sx={{ flexGrow: 1 }}>\n                <Typography variant=\"h4\" gutterBottom>\n                  Get started absolutely free.\n                </Typography>\n                <Typography sx={{ color: \"text.secondary\" }}>Free forever.</Typography>\n              </Box>\n              <Tooltip title={capitalCase(method)}>\n                <>\n                  <Image\n                    disabledEffect\n                    src={`https://minimal-assets-api.vercel.app/assets/icons/auth/ic_${method}.png`}\n                    sx={{ width: 32, height: 32 }}\n                  />\n                </>\n              </Tooltip>\n            </Box>\n\n            <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n              <Stack spacing={3}>\n                {!!errors.afterSubmit && <Alert severity=\"error\">{errors.afterSubmit.message}</Alert>}\n\n                <Stack direction={{ xs: \"column\", sm: \"row\" }} spacing={2}>\n                  <RHFTextField name=\"firstName\" label=\"First name\" />\n                  <RHFTextField name=\"lastName\" label=\"Last name\" />\n                </Stack>\n\n                <RHFTextField name=\"mobile\" label=\"Mobile Phone\" />\n                <RHFTextField name=\"email\" label=\"Email address\" />\n\n                <RHFTextField\n                  name=\"password\"\n                  label=\"Password\"\n                  type={showPassword ? \"text\" : \"password\"}\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton edge=\"end\" onClick={() => setShowPassword(!showPassword)}>\n                          <Iconify icon={showPassword ? \"eva:eye-fill\" : \"eva:eye-off-fill\"} />\n                        </IconButton>\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n\n                <LoadingButton fullWidth size=\"large\" type=\"submit\" variant=\"contained\" loading={isSubmitting}>\n                  Register\n                </LoadingButton>\n              </Stack>\n            </FormProvider>\n\n            <Typography variant=\"body2\" align=\"center\" sx={{ color: \"text.secondary\", mt: 3 }}>\n              By registering, I agree to MyPortal &nbsp;\n              <Link underline=\"always\" color=\"text.primary\" href=\"#\">\n                Terms of Service &nbsp;\n              </Link>\n              and &nbsp;\n              <Link underline=\"always\" color=\"text.primary\" href=\"#\">\n                Privacy Policy\n              </Link>\n              .\n            </Typography>\n\n            <Typography variant=\"body2\" sx={{ mt: 3, textAlign: \"center\" }}>\n              Already have an account?{\" \"}\n              <Link variant=\"subtitle2\" to=\"/login\" component={RouterLink}>\n                Login\n              </Link>\n            </Typography>\n          </ContentStyle>\n        </Container>\n      </RootStyle>\n    </Page>\n  );\n}\n"],"names":["RootStyle","styled","theme","breakpoints","up","display","HeaderStyle","top","zIndex","lineHeight","width","alignItems","position","padding","spacing","justifyContent","SectionStyle","Card","maxWidth","flexDirection","margin","ContentStyle","minHeight","Register","useAuth","register","method","navigate","useNavigate","mdUp","useResponsive","isMountedRef","useIsMountedRef","useState","showPassword","setShowPassword","RegisterSchema","Yup","shape","firstName","required","lastName","mobile","email","password","methods","useForm","resolver","yupResolver","defaultValues","reset","setError","handleSubmit","formState","errors","isSubmitting","onSubmit","data","console","error","current","response","title","variant","sx","px","mt","mb","alt","src","require","flexGrow","gutterBottom","color","capitalCase","disabledEffect","height","afterSubmit","severity","message","direction","xs","sm","name","label","type","InputProps","endAdornment","edge","onClick","icon","fullWidth","size","loading","align","underline","href","textAlign","to","component","RouterLink"],"sourceRoot":""}